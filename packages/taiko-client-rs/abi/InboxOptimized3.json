{"abi":[{"type":"function","name":"acceptOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"bondBalance","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"bond","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decodeProposeInput","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IInbox.ProposeInput","components":[{"name":"deadline","type":"uint48","internalType":"uint48"},{"name":"coreState","type":"tuple","internalType":"struct IInbox.CoreState","components":[{"name":"nextProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"bondInstructionsHash","type":"bytes32","internalType":"bytes32"}]},{"name":"parentProposals","type":"tuple[]","internalType":"struct IInbox.Proposal[]","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"blobReference","type":"tuple","internalType":"struct LibBlobs.BlobReference","components":[{"name":"blobStartIndex","type":"uint16","internalType":"uint16"},{"name":"numBlobs","type":"uint16","internalType":"uint16"},{"name":"offset","type":"uint24","internalType":"uint24"}]},{"name":"transitionRecords","type":"tuple[]","internalType":"struct IInbox.TransitionRecord[]","components":[{"name":"span","type":"uint8","internalType":"uint8"},{"name":"bondInstructions","type":"tuple[]","internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]},{"name":"transitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpointHash","type":"bytes32","internalType":"bytes32"}]},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"numForcedInclusions","type":"uint8","internalType":"uint8"}]}],"stateMutability":"pure"},{"type":"function","name":"decodeProposedEventData","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IInbox.ProposedEventPayload","components":[{"name":"proposal","type":"tuple","internalType":"struct IInbox.Proposal","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"derivation","type":"tuple","internalType":"struct IInbox.Derivation","components":[{"name":"originBlockNumber","type":"uint48","internalType":"uint48"},{"name":"originBlockHash","type":"bytes32","internalType":"bytes32"},{"name":"isForcedInclusion","type":"bool","internalType":"bool"},{"name":"basefeeSharingPctg","type":"uint8","internalType":"uint8"},{"name":"blobSlice","type":"tuple","internalType":"struct LibBlobs.BlobSlice","components":[{"name":"blobHashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"offset","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint48","internalType":"uint48"}]}]},{"name":"coreState","type":"tuple","internalType":"struct IInbox.CoreState","components":[{"name":"nextProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"bondInstructionsHash","type":"bytes32","internalType":"bytes32"}]}]}],"stateMutability":"pure"},{"type":"function","name":"decodeProveInput","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IInbox.ProveInput","components":[{"name":"proposals","type":"tuple[]","internalType":"struct IInbox.Proposal[]","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"transitions","type":"tuple[]","internalType":"struct IInbox.Transition[]","components":[{"name":"proposalHash","type":"bytes32","internalType":"bytes32"},{"name":"parentTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"designatedProver","type":"address","internalType":"address"},{"name":"actualProver","type":"address","internalType":"address"}]}]}],"stateMutability":"pure"},{"type":"function","name":"decodeProvedEventData","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IInbox.ProvedEventPayload","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"transition","type":"tuple","internalType":"struct IInbox.Transition","components":[{"name":"proposalHash","type":"bytes32","internalType":"bytes32"},{"name":"parentTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"designatedProver","type":"address","internalType":"address"},{"name":"actualProver","type":"address","internalType":"address"}]},{"name":"transitionRecord","type":"tuple","internalType":"struct IInbox.TransitionRecord","components":[{"name":"span","type":"uint8","internalType":"uint8"},{"name":"bondInstructions","type":"tuple[]","internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]},{"name":"transitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpointHash","type":"bytes32","internalType":"bytes32"}]}]}],"stateMutability":"pure"},{"type":"function","name":"encodeProposeInput","inputs":[{"name":"_input","type":"tuple","internalType":"struct IInbox.ProposeInput","components":[{"name":"deadline","type":"uint48","internalType":"uint48"},{"name":"coreState","type":"tuple","internalType":"struct IInbox.CoreState","components":[{"name":"nextProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"bondInstructionsHash","type":"bytes32","internalType":"bytes32"}]},{"name":"parentProposals","type":"tuple[]","internalType":"struct IInbox.Proposal[]","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"blobReference","type":"tuple","internalType":"struct LibBlobs.BlobReference","components":[{"name":"blobStartIndex","type":"uint16","internalType":"uint16"},{"name":"numBlobs","type":"uint16","internalType":"uint16"},{"name":"offset","type":"uint24","internalType":"uint24"}]},{"name":"transitionRecords","type":"tuple[]","internalType":"struct IInbox.TransitionRecord[]","components":[{"name":"span","type":"uint8","internalType":"uint8"},{"name":"bondInstructions","type":"tuple[]","internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]},{"name":"transitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpointHash","type":"bytes32","internalType":"bytes32"}]},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"numForcedInclusions","type":"uint8","internalType":"uint8"}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"encodeProposedEventData","inputs":[{"name":"_payload","type":"tuple","internalType":"struct IInbox.ProposedEventPayload","components":[{"name":"proposal","type":"tuple","internalType":"struct IInbox.Proposal","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"derivation","type":"tuple","internalType":"struct IInbox.Derivation","components":[{"name":"originBlockNumber","type":"uint48","internalType":"uint48"},{"name":"originBlockHash","type":"bytes32","internalType":"bytes32"},{"name":"isForcedInclusion","type":"bool","internalType":"bool"},{"name":"basefeeSharingPctg","type":"uint8","internalType":"uint8"},{"name":"blobSlice","type":"tuple","internalType":"struct LibBlobs.BlobSlice","components":[{"name":"blobHashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"offset","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint48","internalType":"uint48"}]}]},{"name":"coreState","type":"tuple","internalType":"struct IInbox.CoreState","components":[{"name":"nextProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"bondInstructionsHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"encodeProposedEventPayload","inputs":[{"name":"_payload","type":"tuple","internalType":"struct IInbox.ProposedEventPayload","components":[{"name":"proposal","type":"tuple","internalType":"struct IInbox.Proposal","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"derivation","type":"tuple","internalType":"struct IInbox.Derivation","components":[{"name":"originBlockNumber","type":"uint48","internalType":"uint48"},{"name":"originBlockHash","type":"bytes32","internalType":"bytes32"},{"name":"isForcedInclusion","type":"bool","internalType":"bool"},{"name":"basefeeSharingPctg","type":"uint8","internalType":"uint8"},{"name":"blobSlice","type":"tuple","internalType":"struct LibBlobs.BlobSlice","components":[{"name":"blobHashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"offset","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint48","internalType":"uint48"}]}]},{"name":"coreState","type":"tuple","internalType":"struct IInbox.CoreState","components":[{"name":"nextProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedProposalId","type":"uint48","internalType":"uint48"},{"name":"lastFinalizedTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"bondInstructionsHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"encodeProveInput","inputs":[{"name":"_input","type":"tuple","internalType":"struct IInbox.ProveInput","components":[{"name":"proposals","type":"tuple[]","internalType":"struct IInbox.Proposal[]","components":[{"name":"id","type":"uint48","internalType":"uint48"},{"name":"timestamp","type":"uint48","internalType":"uint48"},{"name":"lookaheadSlotTimestamp","type":"uint48","internalType":"uint48"},{"name":"proposer","type":"address","internalType":"address"},{"name":"coreStateHash","type":"bytes32","internalType":"bytes32"},{"name":"derivationHash","type":"bytes32","internalType":"bytes32"}]},{"name":"transitions","type":"tuple[]","internalType":"struct IInbox.Transition[]","components":[{"name":"proposalHash","type":"bytes32","internalType":"bytes32"},{"name":"parentTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"designatedProver","type":"address","internalType":"address"},{"name":"actualProver","type":"address","internalType":"address"}]}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"encodeProvedEventData","inputs":[{"name":"_payload","type":"tuple","internalType":"struct IInbox.ProvedEventPayload","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"transition","type":"tuple","internalType":"struct IInbox.Transition","components":[{"name":"proposalHash","type":"bytes32","internalType":"bytes32"},{"name":"parentTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"designatedProver","type":"address","internalType":"address"},{"name":"actualProver","type":"address","internalType":"address"}]},{"name":"transitionRecord","type":"tuple","internalType":"struct IInbox.TransitionRecord","components":[{"name":"span","type":"uint8","internalType":"uint8"},{"name":"bondInstructions","type":"tuple[]","internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]},{"name":"transitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpointHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"encodeProvedEventPayload","inputs":[{"name":"_payload","type":"tuple","internalType":"struct IInbox.ProvedEventPayload","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"transition","type":"tuple","internalType":"struct IInbox.Transition","components":[{"name":"proposalHash","type":"bytes32","internalType":"bytes32"},{"name":"parentTransitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpoint","type":"tuple","internalType":"struct ICheckpointManager.Checkpoint","components":[{"name":"blockNumber","type":"uint48","internalType":"uint48"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"stateRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"designatedProver","type":"address","internalType":"address"},{"name":"actualProver","type":"address","internalType":"address"}]},{"name":"transitionRecord","type":"tuple","internalType":"struct IInbox.TransitionRecord","components":[{"name":"span","type":"uint8","internalType":"uint8"},{"name":"bondInstructions","type":"tuple[]","internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]},{"name":"transitionHash","type":"bytes32","internalType":"bytes32"},{"name":"checkpointHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"getCapacity","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getConfig","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct IInbox.Config","components":[{"name":"bondToken","type":"address","internalType":"address"},{"name":"provingWindow","type":"uint48","internalType":"uint48"},{"name":"extendedProvingWindow","type":"uint48","internalType":"uint48"},{"name":"maxFinalizationCount","type":"uint256","internalType":"uint256"},{"name":"ringBufferSize","type":"uint256","internalType":"uint256"},{"name":"basefeeSharingPctg","type":"uint8","internalType":"uint8"},{"name":"checkpointManager","type":"address","internalType":"address"},{"name":"proofVerifier","type":"address","internalType":"address"},{"name":"proposerChecker","type":"address","internalType":"address"},{"name":"minForcedInclusionCount","type":"uint256","internalType":"uint256"},{"name":"forcedInclusionDelay","type":"uint64","internalType":"uint64"},{"name":"forcedInclusionFeeInGwei","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"getProposalHash","inputs":[{"name":"_proposalId","type":"uint48","internalType":"uint48"}],"outputs":[{"name":"proposalHash_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getTransitionRecordHash","inputs":[{"name":"_proposalId","type":"uint48","internalType":"uint48"},{"name":"_parentTransitionHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"transitionRecordHash_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"impl","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"inNonReentrant","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initV2","inputs":[{"name":"_owner","type":"address","internalType":"address"},{"name":"_genesisBlockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isOldestForcedInclusionDue","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"propose","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prove","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolver","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"storeForcedInclusion","inputs":[{"name":"_blobReference","type":"tuple","internalType":"struct LibBlobs.BlobReference","components":[{"name":"blobStartIndex","type":"uint16","internalType":"uint16"},{"name":"numBlobs","type":"uint16","internalType":"uint16"},{"name":"offset","type":"uint24","internalType":"uint24"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeTo","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"withdrawBond","inputs":[{"name":"_address","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AdminChanged","inputs":[{"name":"previousAdmin","type":"address","indexed":false,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BeaconUpgraded","inputs":[{"name":"beacon","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BondInstructed","inputs":[{"name":"instructions","type":"tuple[]","indexed":false,"internalType":"struct LibBonds.BondInstruction[]","components":[{"name":"proposalId","type":"uint48","internalType":"uint48"},{"name":"bondType","type":"uint8","internalType":"enum LibBonds.BondType"},{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"}]}],"anonymous":false},{"type":"event","name":"BondWithdrawn","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ForcedInclusionStored","inputs":[{"name":"forcedInclusion","type":"tuple","indexed":false,"internalType":"struct IForcedInclusionStore.ForcedInclusion","components":[{"name":"feeInGwei","type":"uint64","internalType":"uint64"},{"name":"blobSlice","type":"tuple","internalType":"struct LibBlobs.BlobSlice","components":[{"name":"blobHashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"offset","type":"uint24","internalType":"uint24"},{"name":"timestamp","type":"uint48","internalType":"uint48"}]}]}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferStarted","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Proposed","inputs":[{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Proved","inputs":[{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ACCESS_DENIED","inputs":[]},{"type":"error","name":"BlobNotFound","inputs":[]},{"type":"error","name":"BondInstructionsLengthExceeded","inputs":[]},{"type":"error","name":"CheckpointMismatch","inputs":[]},{"type":"error","name":"DeadlineExceeded","inputs":[]},{"type":"error","name":"ETH_TRANSFER_FAILED","inputs":[]},{"type":"error","name":"EmptyProposals","inputs":[]},{"type":"error","name":"ExceedsUnfinalizedProposalCapacity","inputs":[]},{"type":"error","name":"FUNC_NOT_IMPLEMENTED","inputs":[]},{"type":"error","name":"INVALID_PAUSE_STATUS","inputs":[]},{"type":"error","name":"InconsistentParams","inputs":[]},{"type":"error","name":"IncorrectProposalCount","inputs":[]},{"type":"error","name":"InvalidBondType","inputs":[]},{"type":"error","name":"InvalidLastProposalProof","inputs":[]},{"type":"error","name":"InvalidSpan","inputs":[]},{"type":"error","name":"InvalidState","inputs":[]},{"type":"error","name":"LengthExceedsUint24","inputs":[]},{"type":"error","name":"NextProposalHashMismatch","inputs":[]},{"type":"error","name":"NoBlobs","inputs":[]},{"type":"error","name":"NoBondToWithdraw","inputs":[]},{"type":"error","name":"ProposalHashMismatch","inputs":[]},{"type":"error","name":"ProposalHashMismatchWithTransition","inputs":[]},{"type":"error","name":"ProposalTransitionLengthMismatch","inputs":[]},{"type":"error","name":"REENTRANT_CALL","inputs":[]},{"type":"error","name":"SpanOutOfBounds","inputs":[]},{"type":"error","name":"TransitionRecordHashMismatchWithStorage","inputs":[]},{"type":"error","name":"TransitionRecordNotProvided","inputs":[]},{"type":"error","name":"UnprocessedForcedInclusionIsDue","inputs":[]},{"type":"error","name":"ZERO_ADDRESS","inputs":[]},{"type":"error","name":"ZERO_VALUE","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","bondBalance(address)":"245e272f","decodeProposeInput(bytes)":"afb63ad4","decodeProposedEventData(bytes)":"c52bb381","decodeProveInput(bytes)":"edbacd44","decodeProvedEventData(bytes)":"e160a68c","encodeProposeInput((uint48,(uint48,uint48,bytes32,bytes32),(uint48,uint48,uint48,address,bytes32,bytes32)[],(uint16,uint16,uint24),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)[],(uint48,bytes32,bytes32),uint8))":"13fc9a59","encodeProposedEventData(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":"b38c7c08","encodeProposedEventPayload(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":"76534f87","encodeProveInput(((uint48,uint48,uint48,address,bytes32,bytes32)[],(bytes32,bytes32,(uint48,bytes32,bytes32),address,address)[]))":"d1e0b652","encodeProvedEventData((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":"a5b8ea60","encodeProvedEventPayload((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":"8481d396","getCapacity()":"c40000d4","getConfig()":"c3f909d4","getProposalHash(uint48)":"0bb54ffd","getTransitionRecordHash(uint48,bytes32)":"ba2850bf","impl()":"8abf6077","inNonReentrant()":"3075db56","initV2(address,bytes32)":"59af1baf","isOldestForcedInclusionDue()":"16db8952","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","pendingOwner()":"e30c3978","propose(bytes,bytes)":"9791e644","prove(bytes,bytes)":"ea191743","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","resolver()":"04f3bcec","storeForcedInclusion((uint16,uint16,uint24))":"e7e46b3d","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","withdrawBond(address)":"7529d9df"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ACCESS_DENIED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlobNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BondInstructionsLengthExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CheckpointMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETH_TRANSFER_FAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyProposals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsUnfinalizedProposalCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FUNC_NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_PAUSE_STATUS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InconsistentParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectProposalCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBondType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLastProposalProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSpan\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthExceedsUint24\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NextProposalHashMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBlobs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBondToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalHashMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalHashMismatchWithTransition\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalTransitionLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REENTRANT_CALL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpanOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransitionRecordHashMismatchWithStorage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransitionRecordNotProvided\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnprocessedForcedInclusionIsDue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"instructions\",\"type\":\"tuple[]\"}],\"name\":\"BondInstructed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BondWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"feeInGwei\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"blobHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"internalType\":\"struct LibBlobs.BlobSlice\",\"name\":\"blobSlice\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct IForcedInclusionStore.ForcedInclusion\",\"name\":\"forcedInclusion\",\"type\":\"tuple\"}],\"name\":\"ForcedInclusionStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Proposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Proved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"bondBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"decodeProposeInput\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"nextProposalId\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastFinalizedProposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"lastFinalizedTransitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bondInstructionsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.CoreState\",\"name\":\"coreState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal[]\",\"name\":\"parentProposals\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"blobStartIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"numBlobs\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"}],\"internalType\":\"struct LibBlobs.BlobReference\",\"name\":\"blobReference\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"span\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"bondInstructions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"transitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.TransitionRecord[]\",\"name\":\"transitionRecords\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"numForcedInclusions\",\"type\":\"uint8\"}],\"internalType\":\"struct IInbox.ProposeInput\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"decodeProposedEventData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"originBlockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"originBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isForcedInclusion\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"basefeeSharingPctg\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"blobHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"internalType\":\"struct LibBlobs.BlobSlice\",\"name\":\"blobSlice\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.Derivation\",\"name\":\"derivation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"nextProposalId\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastFinalizedProposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"lastFinalizedTransitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bondInstructionsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.CoreState\",\"name\":\"coreState\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProposedEventPayload\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"decodeProveInput\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal[]\",\"name\":\"proposals\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentTransitionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"designatedProver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualProver\",\"type\":\"address\"}],\"internalType\":\"struct IInbox.Transition[]\",\"name\":\"transitions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IInbox.ProveInput\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"decodeProvedEventData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentTransitionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"designatedProver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualProver\",\"type\":\"address\"}],\"internalType\":\"struct IInbox.Transition\",\"name\":\"transition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"span\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"bondInstructions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"transitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.TransitionRecord\",\"name\":\"transitionRecord\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProvedEventPayload\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"nextProposalId\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastFinalizedProposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"lastFinalizedTransitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bondInstructionsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.CoreState\",\"name\":\"coreState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal[]\",\"name\":\"parentProposals\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"blobStartIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"numBlobs\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"}],\"internalType\":\"struct LibBlobs.BlobReference\",\"name\":\"blobReference\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"span\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"bondInstructions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"transitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.TransitionRecord[]\",\"name\":\"transitionRecords\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"numForcedInclusions\",\"type\":\"uint8\"}],\"internalType\":\"struct IInbox.ProposeInput\",\"name\":\"_input\",\"type\":\"tuple\"}],\"name\":\"encodeProposeInput\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"originBlockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"originBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isForcedInclusion\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"basefeeSharingPctg\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"blobHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"internalType\":\"struct LibBlobs.BlobSlice\",\"name\":\"blobSlice\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.Derivation\",\"name\":\"derivation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"nextProposalId\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastFinalizedProposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"lastFinalizedTransitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bondInstructionsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.CoreState\",\"name\":\"coreState\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProposedEventPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"encodeProposedEventData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"originBlockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"originBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isForcedInclusion\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"basefeeSharingPctg\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"blobHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"internalType\":\"struct LibBlobs.BlobSlice\",\"name\":\"blobSlice\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.Derivation\",\"name\":\"derivation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"nextProposalId\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lastFinalizedProposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"lastFinalizedTransitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bondInstructionsHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.CoreState\",\"name\":\"coreState\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProposedEventPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"encodeProposedEventPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"id\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"lookaheadSlotTimestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"coreStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"derivationHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.Proposal[]\",\"name\":\"proposals\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentTransitionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"designatedProver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualProver\",\"type\":\"address\"}],\"internalType\":\"struct IInbox.Transition[]\",\"name\":\"transitions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IInbox.ProveInput\",\"name\":\"_input\",\"type\":\"tuple\"}],\"name\":\"encodeProveInput\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentTransitionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"designatedProver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualProver\",\"type\":\"address\"}],\"internalType\":\"struct IInbox.Transition\",\"name\":\"transition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"span\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"bondInstructions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"transitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.TransitionRecord\",\"name\":\"transitionRecord\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProvedEventPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"encodeProvedEventData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentTransitionHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"blockNumber\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ICheckpointManager.Checkpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"designatedProver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actualProver\",\"type\":\"address\"}],\"internalType\":\"struct IInbox.Transition\",\"name\":\"transition\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"span\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint48\",\"name\":\"proposalId\",\"type\":\"uint48\"},{\"internalType\":\"enum LibBonds.BondType\",\"name\":\"bondType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"internalType\":\"struct LibBonds.BondInstruction[]\",\"name\":\"bondInstructions\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"transitionHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"checkpointHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IInbox.TransitionRecord\",\"name\":\"transitionRecord\",\"type\":\"tuple\"}],\"internalType\":\"struct IInbox.ProvedEventPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"encodeProvedEventPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bondToken\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"provingWindow\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"extendedProvingWindow\",\"type\":\"uint48\"},{\"internalType\":\"uint256\",\"name\":\"maxFinalizationCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ringBufferSize\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"basefeeSharingPctg\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"checkpointManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proofVerifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposerChecker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minForcedInclusionCount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"forcedInclusionDelay\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"forcedInclusionFeeInGwei\",\"type\":\"uint64\"}],\"internalType\":\"struct IInbox.Config\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"_proposalId\",\"type\":\"uint48\"}],\"name\":\"getProposalHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalHash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"_proposalId\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"_parentTransitionHash\",\"type\":\"bytes32\"}],\"name\":\"getTransitionRecordHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"transitionRecordHash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"impl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inNonReentrant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_genesisBlockHash\",\"type\":\"bytes32\"}],\"name\":\"initV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOldestForcedInclusionDue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"propose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"prove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"blobStartIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"numBlobs\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"}],\"internalType\":\"struct LibBlobs.BlobReference\",\"name\":\"_blobReference\",\"type\":\"tuple\"}],\"name\":\"storeForcedInclusion\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"withdrawBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@taiko.xyz\",\"details\":\"Key optimizations:      - Custom calldata encoding for propose and prove inputs      - Compact binary representation using LibProposeInputDecoder and LibProveInputDecoder      - Reduced transaction costs through efficient data packing      - Maintains all optimizations from InboxOptimized1 and InboxOptimized2Gas savings: ~40% reduction in calldata costs for propose/prove operations\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"BondInstructed((uint48,uint8,address,address)[])\":{\"params\":{\"instructions\":\"The bond instructions that need to be performed.\"}},\"BondWithdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of bond withdrawn\",\"user\":\"The user whose bond was withdrawn\"}},\"ForcedInclusionStored((uint64,(bytes32[],uint24,uint48)))\":{\"details\":\"Event emitted when a forced inclusion is stored.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"params\":{\"account\":\"The account that paused the contract.\"}},\"Proposed(bytes)\":{\"params\":{\"data\":\"The encoded ProposedEventPayload\"}},\"Proved(bytes)\":{\"params\":{\"data\":\"The encoded ProvedEventPayload\"}},\"Unpaused(address)\":{\"params\":{\"account\":\"The account that unpaused the contract.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"decodeProposeInput(bytes)\":{\"details\":\"Overrides base implementation to use LibProposeInputDecoder\",\"params\":{\"_data\":\"The custom-encoded propose input data\"},\"returns\":{\"_0\":\"_ The decoded ProposeInput struct with all proposal parameters\"}},\"decodeProposedEventData(bytes)\":{\"details\":\"Uses LibProposedEventEncoder for efficient decoding\",\"params\":{\"_data\":\"The custom-encoded event data\"},\"returns\":{\"_0\":\"_ The decoded ProposedEventPayload struct\"}},\"decodeProveInput(bytes)\":{\"details\":\"Overrides base implementation to use LibProveInputDecoder\",\"params\":{\"_data\":\"The custom-encoded prove input data\"},\"returns\":{\"_0\":\"The decoded ProveInput struct with proposals and transitions arrays\"}},\"decodeProvedEventData(bytes)\":{\"details\":\"Uses LibProvedEventEncoder for efficient decoding\",\"params\":{\"_data\":\"The custom-encoded event data\"},\"returns\":{\"_0\":\"_ The decoded ProvedEventPayload struct\"}},\"encodeProposeInput((uint48,(uint48,uint48,bytes32,bytes32),(uint48,uint48,uint48,address,bytes32,bytes32)[],(uint16,uint16,uint24),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)[],(uint48,bytes32,bytes32),uint8))\":{\"details\":\"Reduces calldata size by ~35% compared to standard ABI encoding\",\"params\":{\"_input\":\"The ProposeInput struct to encode\"}},\"encodeProposedEventData(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))\":{\"details\":\"Overrides base implementation to use custom encoding\",\"params\":{\"_payload\":\"The ProposedEventPayload to encode\"},\"returns\":{\"_0\":\"Custom-encoded bytes with reduced size\"}},\"encodeProposedEventPayload(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))\":{\"details\":\"Uses LibProposedEventEncoder for compact representation\",\"params\":{\"_payload\":\"The ProposedEventPayload to encode\"}},\"encodeProveInput(((uint48,uint48,uint48,address,bytes32,bytes32)[],(bytes32,bytes32,(uint48,bytes32,bytes32),address,address)[]))\":{\"details\":\"Reduces calldata size by ~40% compared to standard ABI encoding\",\"params\":{\"_input\":\"The ProveInput struct to encode\"}},\"encodeProvedEventData((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))\":{\"details\":\"Overrides base implementation to use custom encoding\",\"params\":{\"_payload\":\"The ProvedEventPayload to encode\"},\"returns\":{\"_0\":\"Custom-encoded bytes with reduced size\"}},\"encodeProvedEventPayload((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))\":{\"details\":\"Uses LibProvedEventEncoder for compact representation\",\"params\":{\"_payload\":\"The ProvedEventPayload to encode\"}},\"getCapacity()\":{\"details\":\"Capacity is ringBufferSize - 1 to prevent overwriting unfinalized proposals\",\"returns\":{\"_0\":\"_ The maximum number of unfinalized proposals allowed\"}},\"getConfig()\":{\"details\":\"Must be overridden by concrete implementations to provide specific configuration\",\"returns\":{\"_0\":\"_ The Config struct containing all configuration parameters\"}},\"getProposalHash(uint48)\":{\"params\":{\"_proposalId\":\"The ID of the proposal to query\"},\"returns\":{\"proposalHash_\":\"The keccak256 hash of the Proposal struct at the ring buffer slot\"}},\"getTransitionRecordHash(uint48,bytes32)\":{\"params\":{\"_parentTransitionHash\":\"The hash of the parent transition in the proof chain\",\"_proposalId\":\"The ID of the proposal containing the transition\"},\"returns\":{\"transitionRecordHash_\":\"The keccak256 hash of the TransitionRecord, or bytes32(0) if not found\"}},\"initV2(address,bytes32)\":{\"details\":\"This contract uses a reinitializer so that it works both on fresh deployments as well as existing inbox proxies(i.e. mainnet)IMPORTANT: Make sure this function is called in the same tx as the deployment or upgrade happens. On upgrades this is usually done calling `upgradeToAndCall`\",\"params\":{\"_genesisBlockHash\":\"The hash of the genesis block\",\"_owner\":\"The owner of this contract\"}},\"isOldestForcedInclusionDue()\":{\"returns\":{\"_0\":\"True if the oldest forced inclusion is due, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"returns\":{\"_0\":\"true if paused, false otherwise.\"}},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"propose(bytes,bytes)\":{\"details\":\"Key behaviors:      1. Validates proposer authorization via ProposerChecker      2. Finalizes eligible proposals up to `config.maxFinalizationCount` to free ring buffer         space.      3. Process `input.numForcedInclusions` forced inclusions. The proposer is forced to         process at least `config.minForcedInclusionCount` if they are due.      4. Updates core state and emits `Proposed` eventIMPORTANT: The regular proposal might not be included if there is not enough capacity      available(i.e forced inclusions are prioritized).\",\"params\":{\"_data\":\"The encoded ProposeInput struct.\",\"_lookahead\":\"The data to post a new lookahead (currently unused).\"}},\"prove(bytes,bytes)\":{\"details\":\"Validates transitions, calculates bond instructions, and verifies proofs\",\"params\":{\"_data\":\"The encoded ProveInput struct.\",\"_proof\":\"Validity proof for the transitions.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolver()\":{\"returns\":{\"_0\":\"The address of this contract.\"}},\"storeForcedInclusion((uint16,uint16,uint24))\":{\"params\":{\"_blobReference\":\"The blob locator that contains the transaction data\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawBond(address)\":{\"details\":\"Legacy function for withdrawing bonds from Pacaya forkBonds are now managed on L2 by the BondManager contract\",\"params\":{\"_address\":\"The recipient address for the bond withdrawal\"}}},\"title\":\"InboxOptimized3\",\"version\":1},\"userdoc\":{\"events\":{\"BondInstructed((uint48,uint8,address,address)[])\":{\"notice\":\"Emitted when bond instructions are issued\"},\"BondWithdrawn(address,uint256)\":{\"notice\":\"Emitted when bond is withdrawn from the contract\"},\"Paused(address)\":{\"notice\":\"Emitted when the contract is paused.\"},\"Proposed(bytes)\":{\"notice\":\"Emitted when a new proposal is proposed.\"},\"Proved(bytes)\":{\"notice\":\"Emitted when a proof is submitted\"},\"Unpaused(address)\":{\"notice\":\"Emitted when the contract is unpaused.\"}},\"kind\":\"user\",\"methods\":{\"bondBalance(address)\":{\"notice\":\"Bond balance for each account used in Pacaya inbox.\"},\"decodeProposeInput(bytes)\":{\"notice\":\"Decodes custom-encoded proposal input data\"},\"decodeProposedEventData(bytes)\":{\"notice\":\"Decodes custom-encoded proposed event data\"},\"decodeProveInput(bytes)\":{\"notice\":\"Decodes custom-encoded prove input data\"},\"decodeProvedEventData(bytes)\":{\"notice\":\"Decodes custom-encoded proved event data\"},\"encodeProposeInput((uint48,(uint48,uint48,bytes32,bytes32),(uint48,uint48,uint48,address,bytes32,bytes32)[],(uint16,uint16,uint24),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)[],(uint48,bytes32,bytes32),uint8))\":{\"notice\":\"Encodes ProposeInput using optimized binary format\"},\"encodeProposedEventData(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))\":{\"notice\":\"Encodes proposed event data using optimized format\"},\"encodeProposedEventPayload(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))\":{\"notice\":\"Encodes ProposedEventPayload for efficient event emission\"},\"encodeProveInput(((uint48,uint48,uint48,address,bytes32,bytes32)[],(bytes32,bytes32,(uint48,bytes32,bytes32),address,address)[]))\":{\"notice\":\"Encodes ProveInput using optimized binary format\"},\"encodeProvedEventData((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))\":{\"notice\":\"Encodes proved event data using optimized format\"},\"encodeProvedEventPayload((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))\":{\"notice\":\"Encodes ProvedEventPayload for efficient event emission\"},\"getCapacity()\":{\"notice\":\"Returns the maximum capacity for unfinalized proposals\"},\"getConfig()\":{\"notice\":\"Returns the configuration parameters for this Inbox instance\"},\"getProposalHash(uint48)\":{\"notice\":\"Retrieves the proposal hash for a given proposal ID\"},\"getTransitionRecordHash(uint48,bytes32)\":{\"notice\":\"Retrieves the transition record hash for a specific proposal and parent transition\"},\"initV2(address,bytes32)\":{\"notice\":\"Initializes the Inbox contract with genesis block\"},\"isOldestForcedInclusionDue()\":{\"notice\":\"Checks if the oldest forced inclusion is due\"},\"pause()\":{\"notice\":\"Pauses the contract.\"},\"paused()\":{\"notice\":\"Returns true if the contract is paused, and false otherwise.\"},\"propose(bytes,bytes)\":{\"notice\":\"Proposes new L2 blocks and forced inclusions to the rollup using blobs for DA.\"},\"prove(bytes,bytes)\":{\"notice\":\"Proves the validity of proposed L2 blocks\"},\"resolver()\":{\"notice\":\"Returns the address of this contract.\"},\"storeForcedInclusion((uint16,uint16,uint24))\":{\"notice\":\"Stores a forced inclusion request The priority fee must be paid to the contract\"},\"unpause()\":{\"notice\":\"Unpauses the contract.\"},\"withdrawBond(address)\":{\"notice\":\"Withdraws bond balance to specified address\"}},\"notice\":\"Third optimization layer focusing on calldata cost reduction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/layer1/shasta/impl/InboxOptimized3.sol\":\"InboxOptimized3\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eth-fabric/urc/=node_modules/urc/src/\",\":@openzeppelin-upgrades/contracts/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@optimism/=node_modules/optimism/\",\":@p256-verifier/contracts/=node_modules/p256-verifier/src/\",\":@risc0/contracts/=node_modules/risc0-ethereum/contracts/src/\",\":@solady/=node_modules/solady/\",\":@sp1-contracts/=node_modules/sp1-contracts/contracts/\",\":ds-test/=node_modules/ds-test/\",\":forge-std/=node_modules/forge-std/\",\":openzeppelin/=node_modules/@openzeppelin/\",\":optimism/=node_modules/optimism/\",\":p256-verifier/=node_modules/p256-verifier/\",\":risc0-ethereum/=node_modules/risc0-ethereum/\",\":script/=script/\",\":solady/=node_modules/solady/\",\":sp1-contracts/=node_modules/sp1-contracts/\",\":src/=contracts/\",\":test/=test/\",\":urc/=node_modules/urc/\"]},\"sources\":{\"contracts/layer1/shasta/iface/IForcedInclusionStore.sol\":{\"keccak256\":\"0xf018e627fbeb79a2164140b68fdee48688041106f5abc2deae5467d06018cc6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://244503abe26b0193f59d757e3faaabc1e8fd5033a7d2032e563301b21770b403\",\"dweb:/ipfs/QmUjBZW5nnYi29eodeHjhkTMgxSZ8Sf1pNsrYkMXB3JH6s\"]},\"contracts/layer1/shasta/iface/IInbox.sol\":{\"keccak256\":\"0x770a54c995f81d79773147ef59b773fc0b20317912daf7f1b463dd224b22f194\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa697a6ab825783498f6f265e59e1127568a7916af668a40b0abf3a95718b5c5\",\"dweb:/ipfs/QmNXshMNbX2Q2YC4rnhUgs1zbnHEXPMouFzGmNZm1oBZg3\"]},\"contracts/layer1/shasta/iface/IProofVerifier.sol\":{\"keccak256\":\"0xb7d16b161a44bfb9a272a86a1417ab416c5c11d427c1993e88b0ad42ca13e2eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02af4be1409369b2cca6e21a966bd96f14deeff0a9d4d10c447f1ecce3d3f9a0\",\"dweb:/ipfs/QmfM5mmgog2Q49tapyvtTbhuX4Na9PJNqQdwymN8wZPAg8\"]},\"contracts/layer1/shasta/iface/IProposerChecker.sol\":{\"keccak256\":\"0x3f267862262d8b73bb616137aefa5a8ff480e236d9ec1eb05292a0fd856e71b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5651465a4c63cb0537b0d02ba6b8e8ba1a73fc3a64d3ed73d6ec7c906758ed43\",\"dweb:/ipfs/QmV2c9ezsSb8QNfoTEu6ETurqC8mGaPXpEuzbPP4kEzgy2\"]},\"contracts/layer1/shasta/impl/Inbox.sol\":{\"keccak256\":\"0x60eed6e270fa34bed063301fffead0678b7d1c8d1d3c813baa8fee023ee4df20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1df93a4c477ea086f089396829c641e5be20169c35df79991785783a2d70dc38\",\"dweb:/ipfs/Qme7ZQNbrJANYTPwXNtVgN7FrMeBN5DRi5P3y511X1WKmz\"]},\"contracts/layer1/shasta/impl/InboxOptimized1.sol\":{\"keccak256\":\"0x78af0cbecea33af670fbeee5c593680d51aee1d47180d7c06929be7f54a86982\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39f0ca7e9cf0e96b1c740aa709dfb6a27bf5d03c8ba9bdee51522e5cae463c95\",\"dweb:/ipfs/QmNdzdiCfbrHyxRmvZMeNa6e3ZGTyy9Bdu54Ykgfzn9dj4\"]},\"contracts/layer1/shasta/impl/InboxOptimized2.sol\":{\"keccak256\":\"0x8ddc895866d529da416493ea578e15ac58adfa3058fb9770bf95c938f423f2f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://795e655cba93ce76ca8c8eba2f8de9af4941a930420d2393da2c5e42ad9b655b\",\"dweb:/ipfs/QmatwS1t7kUqzJcPVcBRDF1f2QqrNBwcuL77yCHD7K9LVp\"]},\"contracts/layer1/shasta/impl/InboxOptimized3.sol\":{\"keccak256\":\"0x1ca3aada856a606125f033110c1398aa364bca1000a630ac07c4319f4205a8b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7f9506a234ad4404d164684a7a176c0f5f9c539359967e71e74a4ddeb207db7\",\"dweb:/ipfs/QmbVpqW1j8MRVH4Vk25MunAVugM9MmXqm5v9wf4g8JtT5h\"]},\"contracts/layer1/shasta/libs/LibBlobs.sol\":{\"keccak256\":\"0x1eb5537ac5d821896e88c7711c185b58e86fb9baa4e327136b8ee6d3080feb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5913bc556cd0d616896c357e4629e1838001aa6598c11646f52db9b21c8e598\",\"dweb:/ipfs/QmRHYMcshH9Gh2E74RRo6qhFwh1FaY8WAh3vJU13NuFbS4\"]},\"contracts/layer1/shasta/libs/LibForcedInclusion.sol\":{\"keccak256\":\"0x3aeadaf8dcb72818947f88c730600eaeb404b630e1ffaabf5694d67591fa21c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8946be4533070a97ddeb205e972c258576b89a13676fd8297c3a11fadb130a8\",\"dweb:/ipfs/QmZwoPrL2wMhojt8hHozPe7peXbqWQvJapJqSbZaNDqP82\"]},\"contracts/layer1/shasta/libs/LibPackUnpack.sol\":{\"keccak256\":\"0x6665378e8b958037247839bf2d7fbb76a20df691364e6365de4c7b21024cfc47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac26d680016f2af8b3aba6b114bfd33dea027c91d5e80258e862f13f115cb1b9\",\"dweb:/ipfs/QmZbiu4rFRBgm3D4Q2CrT19ZWHjbDWQzbe178CJWSsGA2j\"]},\"contracts/layer1/shasta/libs/LibProposeInputDecoder.sol\":{\"keccak256\":\"0x6c352b161b60036864279f38364421c9a64bb76865656ac3079c70d1a762407c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a35b4be3ffbc29c99d58f7e5337ccb797d5f19b09c3f240d1c962c56d10fb592\",\"dweb:/ipfs/QmXqukwuNVm1x98JHZuf1q7Nrw6ZQ1TdGgmVuFXGAYgr6W\"]},\"contracts/layer1/shasta/libs/LibProposedEventEncoder.sol\":{\"keccak256\":\"0x750e56b1357517fdc90755d4812b1dc5234d101a792b6f66e63ebde97eb615d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://370fa37a90e7d2b89d89ce9d425eef21c5dabd89c89d6c79bd43ee3f86416401\",\"dweb:/ipfs/QmWagr3b3eBiryWQvvxvk8DZWkU2U4x41T7ng2vhpwUU2U\"]},\"contracts/layer1/shasta/libs/LibProveInputDecoder.sol\":{\"keccak256\":\"0xed2bf2476a111a64402ab21c020f18b5d80af1eb10d40528a28e0997ce9f3bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93843370e76526f9240846d149f4c3f844dd33d30f67ba2387adb095e21094c1\",\"dweb:/ipfs/QmQ8WoZ1M72FERYajYYF14qXRPaSDS5nLnoztKLmSGvMNz\"]},\"contracts/layer1/shasta/libs/LibProvedEventEncoder.sol\":{\"keccak256\":\"0x3986b08eee90389aadc26050776b77f280e7a3ac39999a9170130fe2a8c34a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://959fe232e440c92e7dafffa6a0cbbbdd24be8a192b44e150894e5e735c744127\",\"dweb:/ipfs/QmV1mipk99ups4R6L9ymiHqB5veP2qM5fNAiGjZxMoXiy5\"]},\"contracts/shared/based/iface/ICheckpointManager.sol\":{\"keccak256\":\"0xc7fbbff21ed501aae74b3d22d073bc8b746d1c76f4e9744af6035db355a84126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fab7e3e59ab5d8f84f9b9131a2e35fcdcd02b434f585f274a57487aa441d1ba4\",\"dweb:/ipfs/QmbbeEA7Xhv5KFzrmCxFBU5DyfHg6eWKzXybrN5uX9dEYv\"]},\"contracts/shared/based/libs/LibBonds.sol\":{\"keccak256\":\"0x63c3f2e66a226aad554c0315c090e4b89eecf5086f8661dcc67ddf21548290f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c9dd47a1f226699d678ecca7a01771548d6889351a5ba35df0ef8a847e8f18\",\"dweb:/ipfs/QmQGf4Qvtz5DZEPPCMMeTEh3RnWgwQvCP5HPjnRkAGmW6o\"]},\"contracts/shared/common/EssentialContract.sol\":{\"keccak256\":\"0x1346a9c363a805f0520b0e9d2a5ca81607da44a4132df2a9d4464d9ff4130aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4a5258538af95f4618a056b73162322d66367306585e0e80748e36ea59c9e43\",\"dweb:/ipfs/QmfJHx4qw74Uo39vo7cTHSu8x5TSkUQbM7GmP8QvBin2YQ\"]},\"contracts/shared/common/IResolver.sol\":{\"keccak256\":\"0x01273635aa0be2ad8d6218ad520f824f2003eab82be1d14c46da58f2516a48dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122dd3456077cf0be42bb974954c9918dca296415b076faeba0336ecee33de8e\",\"dweb:/ipfs/QmSr4WQEFDJwqyqpextmY8Fp3b7Z96SBHgAEKsvXe6dEZV\"]},\"contracts/shared/libs/LibAddress.sol\":{\"keccak256\":\"0x7af4709f0f0c92c0cd8e9e271a18502f2a1701766561e1a53c44ba6326a77ee8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebed170007e55e76f36dcfe76afa7d33191910f21a89de096016adac8cc520e3\",\"dweb:/ipfs/QmUDr1vtqMXZsZS1Bm4esXbHH2sEr1J4KETeKwE37D7R3y\"]},\"contracts/shared/libs/LibMath.sol\":{\"keccak256\":\"0x3e2ce1ccb5a4d94c6f97e09ebdb1e731c0bae466981be52147f15063b3742d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3530b4db00c1f357562d2dbab8978613c09b30ce1a6312de864399c7af82f9c7\",\"dweb:/ipfs/Qmbp9HeWwPAx5Krcjuu8UCJB3so6rZu4TUTPD6vRKDDBjg\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75267b14b60dc216d01d596a4008189a6c44d3314e53eded0edb1e757d95be16\",\"dweb:/ipfs/QmQoMaxTRT6V7uQj9USfdQH9jh1crywB9auVjThzUSAbG2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ACCESS_DENIED"},{"inputs":[],"type":"error","name":"BlobNotFound"},{"inputs":[],"type":"error","name":"BondInstructionsLengthExceeded"},{"inputs":[],"type":"error","name":"CheckpointMismatch"},{"inputs":[],"type":"error","name":"DeadlineExceeded"},{"inputs":[],"type":"error","name":"ETH_TRANSFER_FAILED"},{"inputs":[],"type":"error","name":"EmptyProposals"},{"inputs":[],"type":"error","name":"ExceedsUnfinalizedProposalCapacity"},{"inputs":[],"type":"error","name":"FUNC_NOT_IMPLEMENTED"},{"inputs":[],"type":"error","name":"INVALID_PAUSE_STATUS"},{"inputs":[],"type":"error","name":"InconsistentParams"},{"inputs":[],"type":"error","name":"IncorrectProposalCount"},{"inputs":[],"type":"error","name":"InvalidBondType"},{"inputs":[],"type":"error","name":"InvalidLastProposalProof"},{"inputs":[],"type":"error","name":"InvalidSpan"},{"inputs":[],"type":"error","name":"InvalidState"},{"inputs":[],"type":"error","name":"LengthExceedsUint24"},{"inputs":[],"type":"error","name":"NextProposalHashMismatch"},{"inputs":[],"type":"error","name":"NoBlobs"},{"inputs":[],"type":"error","name":"NoBondToWithdraw"},{"inputs":[],"type":"error","name":"ProposalHashMismatch"},{"inputs":[],"type":"error","name":"ProposalHashMismatchWithTransition"},{"inputs":[],"type":"error","name":"ProposalTransitionLengthMismatch"},{"inputs":[],"type":"error","name":"REENTRANT_CALL"},{"inputs":[],"type":"error","name":"SpanOutOfBounds"},{"inputs":[],"type":"error","name":"TransitionRecordHashMismatchWithStorage"},{"inputs":[],"type":"error","name":"TransitionRecordNotProvided"},{"inputs":[],"type":"error","name":"UnprocessedForcedInclusionIsDue"},{"inputs":[],"type":"error","name":"ZERO_ADDRESS"},{"inputs":[],"type":"error","name":"ZERO_VALUE"},{"inputs":[{"internalType":"address","name":"previousAdmin","type":"address","indexed":false},{"internalType":"address","name":"newAdmin","type":"address","indexed":false}],"type":"event","name":"AdminChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"beacon","type":"address","indexed":true}],"type":"event","name":"BeaconUpgraded","anonymous":false},{"inputs":[{"internalType":"struct LibBonds.BondInstruction[]","name":"instructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"indexed":false}],"type":"event","name":"BondInstructed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BondWithdrawn","anonymous":false},{"inputs":[{"internalType":"struct IForcedInclusionStore.ForcedInclusion","name":"forcedInclusion","type":"tuple","components":[{"internalType":"uint64","name":"feeInGwei","type":"uint64"},{"internalType":"struct LibBlobs.BlobSlice","name":"blobSlice","type":"tuple","components":[{"internalType":"bytes32[]","name":"blobHashes","type":"bytes32[]"},{"internalType":"uint24","name":"offset","type":"uint24"},{"internalType":"uint48","name":"timestamp","type":"uint48"}]}],"indexed":false}],"type":"event","name":"ForcedInclusionStored","anonymous":false},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferStarted","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"Proposed","anonymous":false},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"Proved","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptOwnership"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"bondBalance","outputs":[{"internalType":"uint256","name":"bond","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"decodeProposeInput","outputs":[{"internalType":"struct IInbox.ProposeInput","name":"","type":"tuple","components":[{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"struct IInbox.CoreState","name":"coreState","type":"tuple","components":[{"internalType":"uint48","name":"nextProposalId","type":"uint48"},{"internalType":"uint48","name":"lastFinalizedProposalId","type":"uint48"},{"internalType":"bytes32","name":"lastFinalizedTransitionHash","type":"bytes32"},{"internalType":"bytes32","name":"bondInstructionsHash","type":"bytes32"}]},{"internalType":"struct IInbox.Proposal[]","name":"parentProposals","type":"tuple[]","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct LibBlobs.BlobReference","name":"blobReference","type":"tuple","components":[{"internalType":"uint16","name":"blobStartIndex","type":"uint16"},{"internalType":"uint16","name":"numBlobs","type":"uint16"},{"internalType":"uint24","name":"offset","type":"uint24"}]},{"internalType":"struct IInbox.TransitionRecord[]","name":"transitionRecords","type":"tuple[]","components":[{"internalType":"uint8","name":"span","type":"uint8"},{"internalType":"struct LibBonds.BondInstruction[]","name":"bondInstructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}]},{"internalType":"bytes32","name":"transitionHash","type":"bytes32"},{"internalType":"bytes32","name":"checkpointHash","type":"bytes32"}]},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"uint8","name":"numForcedInclusions","type":"uint8"}]}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"decodeProposedEventData","outputs":[{"internalType":"struct IInbox.ProposedEventPayload","name":"","type":"tuple","components":[{"internalType":"struct IInbox.Proposal","name":"proposal","type":"tuple","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct IInbox.Derivation","name":"derivation","type":"tuple","components":[{"internalType":"uint48","name":"originBlockNumber","type":"uint48"},{"internalType":"bytes32","name":"originBlockHash","type":"bytes32"},{"internalType":"bool","name":"isForcedInclusion","type":"bool"},{"internalType":"uint8","name":"basefeeSharingPctg","type":"uint8"},{"internalType":"struct LibBlobs.BlobSlice","name":"blobSlice","type":"tuple","components":[{"internalType":"bytes32[]","name":"blobHashes","type":"bytes32[]"},{"internalType":"uint24","name":"offset","type":"uint24"},{"internalType":"uint48","name":"timestamp","type":"uint48"}]}]},{"internalType":"struct IInbox.CoreState","name":"coreState","type":"tuple","components":[{"internalType":"uint48","name":"nextProposalId","type":"uint48"},{"internalType":"uint48","name":"lastFinalizedProposalId","type":"uint48"},{"internalType":"bytes32","name":"lastFinalizedTransitionHash","type":"bytes32"},{"internalType":"bytes32","name":"bondInstructionsHash","type":"bytes32"}]}]}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"decodeProveInput","outputs":[{"internalType":"struct IInbox.ProveInput","name":"","type":"tuple","components":[{"internalType":"struct IInbox.Proposal[]","name":"proposals","type":"tuple[]","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct IInbox.Transition[]","name":"transitions","type":"tuple[]","components":[{"internalType":"bytes32","name":"proposalHash","type":"bytes32"},{"internalType":"bytes32","name":"parentTransitionHash","type":"bytes32"},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"address","name":"designatedProver","type":"address"},{"internalType":"address","name":"actualProver","type":"address"}]}]}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"decodeProvedEventData","outputs":[{"internalType":"struct IInbox.ProvedEventPayload","name":"","type":"tuple","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"struct IInbox.Transition","name":"transition","type":"tuple","components":[{"internalType":"bytes32","name":"proposalHash","type":"bytes32"},{"internalType":"bytes32","name":"parentTransitionHash","type":"bytes32"},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"address","name":"designatedProver","type":"address"},{"internalType":"address","name":"actualProver","type":"address"}]},{"internalType":"struct IInbox.TransitionRecord","name":"transitionRecord","type":"tuple","components":[{"internalType":"uint8","name":"span","type":"uint8"},{"internalType":"struct LibBonds.BondInstruction[]","name":"bondInstructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}]},{"internalType":"bytes32","name":"transitionHash","type":"bytes32"},{"internalType":"bytes32","name":"checkpointHash","type":"bytes32"}]}]}]},{"inputs":[{"internalType":"struct IInbox.ProposeInput","name":"_input","type":"tuple","components":[{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"struct IInbox.CoreState","name":"coreState","type":"tuple","components":[{"internalType":"uint48","name":"nextProposalId","type":"uint48"},{"internalType":"uint48","name":"lastFinalizedProposalId","type":"uint48"},{"internalType":"bytes32","name":"lastFinalizedTransitionHash","type":"bytes32"},{"internalType":"bytes32","name":"bondInstructionsHash","type":"bytes32"}]},{"internalType":"struct IInbox.Proposal[]","name":"parentProposals","type":"tuple[]","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct LibBlobs.BlobReference","name":"blobReference","type":"tuple","components":[{"internalType":"uint16","name":"blobStartIndex","type":"uint16"},{"internalType":"uint16","name":"numBlobs","type":"uint16"},{"internalType":"uint24","name":"offset","type":"uint24"}]},{"internalType":"struct IInbox.TransitionRecord[]","name":"transitionRecords","type":"tuple[]","components":[{"internalType":"uint8","name":"span","type":"uint8"},{"internalType":"struct LibBonds.BondInstruction[]","name":"bondInstructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}]},{"internalType":"bytes32","name":"transitionHash","type":"bytes32"},{"internalType":"bytes32","name":"checkpointHash","type":"bytes32"}]},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"uint8","name":"numForcedInclusions","type":"uint8"}]}],"stateMutability":"pure","type":"function","name":"encodeProposeInput","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct IInbox.ProposedEventPayload","name":"_payload","type":"tuple","components":[{"internalType":"struct IInbox.Proposal","name":"proposal","type":"tuple","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct IInbox.Derivation","name":"derivation","type":"tuple","components":[{"internalType":"uint48","name":"originBlockNumber","type":"uint48"},{"internalType":"bytes32","name":"originBlockHash","type":"bytes32"},{"internalType":"bool","name":"isForcedInclusion","type":"bool"},{"internalType":"uint8","name":"basefeeSharingPctg","type":"uint8"},{"internalType":"struct LibBlobs.BlobSlice","name":"blobSlice","type":"tuple","components":[{"internalType":"bytes32[]","name":"blobHashes","type":"bytes32[]"},{"internalType":"uint24","name":"offset","type":"uint24"},{"internalType":"uint48","name":"timestamp","type":"uint48"}]}]},{"internalType":"struct IInbox.CoreState","name":"coreState","type":"tuple","components":[{"internalType":"uint48","name":"nextProposalId","type":"uint48"},{"internalType":"uint48","name":"lastFinalizedProposalId","type":"uint48"},{"internalType":"bytes32","name":"lastFinalizedTransitionHash","type":"bytes32"},{"internalType":"bytes32","name":"bondInstructionsHash","type":"bytes32"}]}]}],"stateMutability":"pure","type":"function","name":"encodeProposedEventData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct IInbox.ProposedEventPayload","name":"_payload","type":"tuple","components":[{"internalType":"struct IInbox.Proposal","name":"proposal","type":"tuple","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct IInbox.Derivation","name":"derivation","type":"tuple","components":[{"internalType":"uint48","name":"originBlockNumber","type":"uint48"},{"internalType":"bytes32","name":"originBlockHash","type":"bytes32"},{"internalType":"bool","name":"isForcedInclusion","type":"bool"},{"internalType":"uint8","name":"basefeeSharingPctg","type":"uint8"},{"internalType":"struct LibBlobs.BlobSlice","name":"blobSlice","type":"tuple","components":[{"internalType":"bytes32[]","name":"blobHashes","type":"bytes32[]"},{"internalType":"uint24","name":"offset","type":"uint24"},{"internalType":"uint48","name":"timestamp","type":"uint48"}]}]},{"internalType":"struct IInbox.CoreState","name":"coreState","type":"tuple","components":[{"internalType":"uint48","name":"nextProposalId","type":"uint48"},{"internalType":"uint48","name":"lastFinalizedProposalId","type":"uint48"},{"internalType":"bytes32","name":"lastFinalizedTransitionHash","type":"bytes32"},{"internalType":"bytes32","name":"bondInstructionsHash","type":"bytes32"}]}]}],"stateMutability":"pure","type":"function","name":"encodeProposedEventPayload","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct IInbox.ProveInput","name":"_input","type":"tuple","components":[{"internalType":"struct IInbox.Proposal[]","name":"proposals","type":"tuple[]","components":[{"internalType":"uint48","name":"id","type":"uint48"},{"internalType":"uint48","name":"timestamp","type":"uint48"},{"internalType":"uint48","name":"lookaheadSlotTimestamp","type":"uint48"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"bytes32","name":"coreStateHash","type":"bytes32"},{"internalType":"bytes32","name":"derivationHash","type":"bytes32"}]},{"internalType":"struct IInbox.Transition[]","name":"transitions","type":"tuple[]","components":[{"internalType":"bytes32","name":"proposalHash","type":"bytes32"},{"internalType":"bytes32","name":"parentTransitionHash","type":"bytes32"},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"address","name":"designatedProver","type":"address"},{"internalType":"address","name":"actualProver","type":"address"}]}]}],"stateMutability":"pure","type":"function","name":"encodeProveInput","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct IInbox.ProvedEventPayload","name":"_payload","type":"tuple","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"struct IInbox.Transition","name":"transition","type":"tuple","components":[{"internalType":"bytes32","name":"proposalHash","type":"bytes32"},{"internalType":"bytes32","name":"parentTransitionHash","type":"bytes32"},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"address","name":"designatedProver","type":"address"},{"internalType":"address","name":"actualProver","type":"address"}]},{"internalType":"struct IInbox.TransitionRecord","name":"transitionRecord","type":"tuple","components":[{"internalType":"uint8","name":"span","type":"uint8"},{"internalType":"struct LibBonds.BondInstruction[]","name":"bondInstructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}]},{"internalType":"bytes32","name":"transitionHash","type":"bytes32"},{"internalType":"bytes32","name":"checkpointHash","type":"bytes32"}]}]}],"stateMutability":"pure","type":"function","name":"encodeProvedEventData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"struct IInbox.ProvedEventPayload","name":"_payload","type":"tuple","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"struct IInbox.Transition","name":"transition","type":"tuple","components":[{"internalType":"bytes32","name":"proposalHash","type":"bytes32"},{"internalType":"bytes32","name":"parentTransitionHash","type":"bytes32"},{"internalType":"struct ICheckpointManager.Checkpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"uint48","name":"blockNumber","type":"uint48"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"bytes32","name":"stateRoot","type":"bytes32"}]},{"internalType":"address","name":"designatedProver","type":"address"},{"internalType":"address","name":"actualProver","type":"address"}]},{"internalType":"struct IInbox.TransitionRecord","name":"transitionRecord","type":"tuple","components":[{"internalType":"uint8","name":"span","type":"uint8"},{"internalType":"struct LibBonds.BondInstruction[]","name":"bondInstructions","type":"tuple[]","components":[{"internalType":"uint48","name":"proposalId","type":"uint48"},{"internalType":"enum LibBonds.BondType","name":"bondType","type":"uint8"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"}]},{"internalType":"bytes32","name":"transitionHash","type":"bytes32"},{"internalType":"bytes32","name":"checkpointHash","type":"bytes32"}]}]}],"stateMutability":"pure","type":"function","name":"encodeProvedEventPayload","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCapacity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getConfig","outputs":[{"internalType":"struct IInbox.Config","name":"","type":"tuple","components":[{"internalType":"address","name":"bondToken","type":"address"},{"internalType":"uint48","name":"provingWindow","type":"uint48"},{"internalType":"uint48","name":"extendedProvingWindow","type":"uint48"},{"internalType":"uint256","name":"maxFinalizationCount","type":"uint256"},{"internalType":"uint256","name":"ringBufferSize","type":"uint256"},{"internalType":"uint8","name":"basefeeSharingPctg","type":"uint8"},{"internalType":"address","name":"checkpointManager","type":"address"},{"internalType":"address","name":"proofVerifier","type":"address"},{"internalType":"address","name":"proposerChecker","type":"address"},{"internalType":"uint256","name":"minForcedInclusionCount","type":"uint256"},{"internalType":"uint64","name":"forcedInclusionDelay","type":"uint64"},{"internalType":"uint64","name":"forcedInclusionFeeInGwei","type":"uint64"}]}]},{"inputs":[{"internalType":"uint48","name":"_proposalId","type":"uint48"}],"stateMutability":"view","type":"function","name":"getProposalHash","outputs":[{"internalType":"bytes32","name":"proposalHash_","type":"bytes32"}]},{"inputs":[{"internalType":"uint48","name":"_proposalId","type":"uint48"},{"internalType":"bytes32","name":"_parentTransitionHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getTransitionRecordHash","outputs":[{"internalType":"bytes32","name":"transitionRecordHash_","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"impl","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"inNonReentrant","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"bytes32","name":"_genesisBlockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"initV2"},{"inputs":[],"stateMutability":"view","type":"function","name":"isOldestForcedInclusionDue","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"propose"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_proof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"prove"},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[],"stateMutability":"view","type":"function","name":"resolver","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct LibBlobs.BlobReference","name":"_blobReference","type":"tuple","components":[{"internalType":"uint16","name":"blobStartIndex","type":"uint16"},{"internalType":"uint16","name":"numBlobs","type":"uint16"},{"internalType":"uint24","name":"offset","type":"uint24"}]}],"stateMutability":"payable","type":"function","name":"storeForcedInclusion"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"upgradeTo"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawBond"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"decodeProposeInput(bytes)":{"details":"Overrides base implementation to use LibProposeInputDecoder","params":{"_data":"The custom-encoded propose input data"},"returns":{"_0":"_ The decoded ProposeInput struct with all proposal parameters"}},"decodeProposedEventData(bytes)":{"details":"Uses LibProposedEventEncoder for efficient decoding","params":{"_data":"The custom-encoded event data"},"returns":{"_0":"_ The decoded ProposedEventPayload struct"}},"decodeProveInput(bytes)":{"details":"Overrides base implementation to use LibProveInputDecoder","params":{"_data":"The custom-encoded prove input data"},"returns":{"_0":"The decoded ProveInput struct with proposals and transitions arrays"}},"decodeProvedEventData(bytes)":{"details":"Uses LibProvedEventEncoder for efficient decoding","params":{"_data":"The custom-encoded event data"},"returns":{"_0":"_ The decoded ProvedEventPayload struct"}},"encodeProposeInput((uint48,(uint48,uint48,bytes32,bytes32),(uint48,uint48,uint48,address,bytes32,bytes32)[],(uint16,uint16,uint24),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)[],(uint48,bytes32,bytes32),uint8))":{"details":"Reduces calldata size by ~35% compared to standard ABI encoding","params":{"_input":"The ProposeInput struct to encode"}},"encodeProposedEventData(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":{"details":"Overrides base implementation to use custom encoding","params":{"_payload":"The ProposedEventPayload to encode"},"returns":{"_0":"Custom-encoded bytes with reduced size"}},"encodeProposedEventPayload(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":{"details":"Uses LibProposedEventEncoder for compact representation","params":{"_payload":"The ProposedEventPayload to encode"}},"encodeProveInput(((uint48,uint48,uint48,address,bytes32,bytes32)[],(bytes32,bytes32,(uint48,bytes32,bytes32),address,address)[]))":{"details":"Reduces calldata size by ~40% compared to standard ABI encoding","params":{"_input":"The ProveInput struct to encode"}},"encodeProvedEventData((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":{"details":"Overrides base implementation to use custom encoding","params":{"_payload":"The ProvedEventPayload to encode"},"returns":{"_0":"Custom-encoded bytes with reduced size"}},"encodeProvedEventPayload((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":{"details":"Uses LibProvedEventEncoder for compact representation","params":{"_payload":"The ProvedEventPayload to encode"}},"getCapacity()":{"details":"Capacity is ringBufferSize - 1 to prevent overwriting unfinalized proposals","returns":{"_0":"_ The maximum number of unfinalized proposals allowed"}},"getConfig()":{"details":"Must be overridden by concrete implementations to provide specific configuration","returns":{"_0":"_ The Config struct containing all configuration parameters"}},"getProposalHash(uint48)":{"params":{"_proposalId":"The ID of the proposal to query"},"returns":{"proposalHash_":"The keccak256 hash of the Proposal struct at the ring buffer slot"}},"getTransitionRecordHash(uint48,bytes32)":{"params":{"_parentTransitionHash":"The hash of the parent transition in the proof chain","_proposalId":"The ID of the proposal containing the transition"},"returns":{"transitionRecordHash_":"The keccak256 hash of the TransitionRecord, or bytes32(0) if not found"}},"initV2(address,bytes32)":{"details":"This contract uses a reinitializer so that it works both on fresh deployments as well as existing inbox proxies(i.e. mainnet)IMPORTANT: Make sure this function is called in the same tx as the deployment or upgrade happens. On upgrades this is usually done calling `upgradeToAndCall`","params":{"_genesisBlockHash":"The hash of the genesis block","_owner":"The owner of this contract"}},"isOldestForcedInclusionDue()":{"returns":{"_0":"True if the oldest forced inclusion is due, false otherwise"}},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"returns":{"_0":"true if paused, false otherwise."}},"pendingOwner()":{"details":"Returns the address of the pending owner."},"propose(bytes,bytes)":{"details":"Key behaviors:      1. Validates proposer authorization via ProposerChecker      2. Finalizes eligible proposals up to `config.maxFinalizationCount` to free ring buffer         space.      3. Process `input.numForcedInclusions` forced inclusions. The proposer is forced to         process at least `config.minForcedInclusionCount` if they are due.      4. Updates core state and emits `Proposed` eventIMPORTANT: The regular proposal might not be included if there is not enough capacity      available(i.e forced inclusions are prioritized).","params":{"_data":"The encoded ProposeInput struct.","_lookahead":"The data to post a new lookahead (currently unused)."}},"prove(bytes,bytes)":{"details":"Validates transitions, calculates bond instructions, and verifies proofs","params":{"_data":"The encoded ProveInput struct.","_proof":"Validity proof for the transitions."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"resolver()":{"returns":{"_0":"The address of this contract."}},"storeForcedInclusion((uint16,uint16,uint24))":{"params":{"_blobReference":"The blob locator that contains the transaction data"}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"withdrawBond(address)":{"details":"Legacy function for withdrawing bonds from Pacaya forkBonds are now managed on L2 by the BondManager contract","params":{"_address":"The recipient address for the bond withdrawal"}}},"version":1},"userdoc":{"kind":"user","methods":{"bondBalance(address)":{"notice":"Bond balance for each account used in Pacaya inbox."},"decodeProposeInput(bytes)":{"notice":"Decodes custom-encoded proposal input data"},"decodeProposedEventData(bytes)":{"notice":"Decodes custom-encoded proposed event data"},"decodeProveInput(bytes)":{"notice":"Decodes custom-encoded prove input data"},"decodeProvedEventData(bytes)":{"notice":"Decodes custom-encoded proved event data"},"encodeProposeInput((uint48,(uint48,uint48,bytes32,bytes32),(uint48,uint48,uint48,address,bytes32,bytes32)[],(uint16,uint16,uint24),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)[],(uint48,bytes32,bytes32),uint8))":{"notice":"Encodes ProposeInput using optimized binary format"},"encodeProposedEventData(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":{"notice":"Encodes proposed event data using optimized format"},"encodeProposedEventPayload(((uint48,uint48,uint48,address,bytes32,bytes32),(uint48,bytes32,bool,uint8,(bytes32[],uint24,uint48)),(uint48,uint48,bytes32,bytes32)))":{"notice":"Encodes ProposedEventPayload for efficient event emission"},"encodeProveInput(((uint48,uint48,uint48,address,bytes32,bytes32)[],(bytes32,bytes32,(uint48,bytes32,bytes32),address,address)[]))":{"notice":"Encodes ProveInput using optimized binary format"},"encodeProvedEventData((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":{"notice":"Encodes proved event data using optimized format"},"encodeProvedEventPayload((uint48,(bytes32,bytes32,(uint48,bytes32,bytes32),address,address),(uint8,(uint48,uint8,address,address)[],bytes32,bytes32)))":{"notice":"Encodes ProvedEventPayload for efficient event emission"},"getCapacity()":{"notice":"Returns the maximum capacity for unfinalized proposals"},"getConfig()":{"notice":"Returns the configuration parameters for this Inbox instance"},"getProposalHash(uint48)":{"notice":"Retrieves the proposal hash for a given proposal ID"},"getTransitionRecordHash(uint48,bytes32)":{"notice":"Retrieves the transition record hash for a specific proposal and parent transition"},"initV2(address,bytes32)":{"notice":"Initializes the Inbox contract with genesis block"},"isOldestForcedInclusionDue()":{"notice":"Checks if the oldest forced inclusion is due"},"pause()":{"notice":"Pauses the contract."},"paused()":{"notice":"Returns true if the contract is paused, and false otherwise."},"propose(bytes,bytes)":{"notice":"Proposes new L2 blocks and forced inclusions to the rollup using blobs for DA."},"prove(bytes,bytes)":{"notice":"Proves the validity of proposed L2 blocks"},"resolver()":{"notice":"Returns the address of this contract."},"storeForcedInclusion((uint16,uint16,uint24))":{"notice":"Stores a forced inclusion request The priority fee must be paid to the contract"},"unpause()":{"notice":"Unpauses the contract."},"withdrawBond(address)":{"notice":"Withdraws bond balance to specified address"}},"version":1}},"settings":{"remappings":["@eth-fabric/urc/=node_modules/urc/src/","@openzeppelin-upgrades/contracts/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/=node_modules/@openzeppelin/","@optimism/=node_modules/optimism/","@p256-verifier/contracts/=node_modules/p256-verifier/src/","@risc0/contracts/=node_modules/risc0-ethereum/contracts/src/","@solady/=node_modules/solady/","@sp1-contracts/=node_modules/sp1-contracts/contracts/","ds-test/=node_modules/ds-test/","forge-std/=node_modules/forge-std/","openzeppelin/=node_modules/@openzeppelin/","optimism/=node_modules/optimism/","p256-verifier/=node_modules/p256-verifier/","risc0-ethereum/=node_modules/risc0-ethereum/","script/=script/","solady/=node_modules/solady/","sp1-contracts/=node_modules/sp1-contracts/","src/=contracts/","test/=test/","urc/=node_modules/urc/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/layer1/shasta/impl/InboxOptimized3.sol":"InboxOptimized3"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/layer1/shasta/iface/IForcedInclusionStore.sol":{"keccak256":"0xf018e627fbeb79a2164140b68fdee48688041106f5abc2deae5467d06018cc6a","urls":["bzz-raw://244503abe26b0193f59d757e3faaabc1e8fd5033a7d2032e563301b21770b403","dweb:/ipfs/QmUjBZW5nnYi29eodeHjhkTMgxSZ8Sf1pNsrYkMXB3JH6s"],"license":"MIT"},"contracts/layer1/shasta/iface/IInbox.sol":{"keccak256":"0x770a54c995f81d79773147ef59b773fc0b20317912daf7f1b463dd224b22f194","urls":["bzz-raw://aa697a6ab825783498f6f265e59e1127568a7916af668a40b0abf3a95718b5c5","dweb:/ipfs/QmNXshMNbX2Q2YC4rnhUgs1zbnHEXPMouFzGmNZm1oBZg3"],"license":"MIT"},"contracts/layer1/shasta/iface/IProofVerifier.sol":{"keccak256":"0xb7d16b161a44bfb9a272a86a1417ab416c5c11d427c1993e88b0ad42ca13e2eb","urls":["bzz-raw://02af4be1409369b2cca6e21a966bd96f14deeff0a9d4d10c447f1ecce3d3f9a0","dweb:/ipfs/QmfM5mmgog2Q49tapyvtTbhuX4Na9PJNqQdwymN8wZPAg8"],"license":"MIT"},"contracts/layer1/shasta/iface/IProposerChecker.sol":{"keccak256":"0x3f267862262d8b73bb616137aefa5a8ff480e236d9ec1eb05292a0fd856e71b3","urls":["bzz-raw://5651465a4c63cb0537b0d02ba6b8e8ba1a73fc3a64d3ed73d6ec7c906758ed43","dweb:/ipfs/QmV2c9ezsSb8QNfoTEu6ETurqC8mGaPXpEuzbPP4kEzgy2"],"license":"MIT"},"contracts/layer1/shasta/impl/Inbox.sol":{"keccak256":"0x60eed6e270fa34bed063301fffead0678b7d1c8d1d3c813baa8fee023ee4df20","urls":["bzz-raw://1df93a4c477ea086f089396829c641e5be20169c35df79991785783a2d70dc38","dweb:/ipfs/Qme7ZQNbrJANYTPwXNtVgN7FrMeBN5DRi5P3y511X1WKmz"],"license":"MIT"},"contracts/layer1/shasta/impl/InboxOptimized1.sol":{"keccak256":"0x78af0cbecea33af670fbeee5c593680d51aee1d47180d7c06929be7f54a86982","urls":["bzz-raw://39f0ca7e9cf0e96b1c740aa709dfb6a27bf5d03c8ba9bdee51522e5cae463c95","dweb:/ipfs/QmNdzdiCfbrHyxRmvZMeNa6e3ZGTyy9Bdu54Ykgfzn9dj4"],"license":"MIT"},"contracts/layer1/shasta/impl/InboxOptimized2.sol":{"keccak256":"0x8ddc895866d529da416493ea578e15ac58adfa3058fb9770bf95c938f423f2f2","urls":["bzz-raw://795e655cba93ce76ca8c8eba2f8de9af4941a930420d2393da2c5e42ad9b655b","dweb:/ipfs/QmatwS1t7kUqzJcPVcBRDF1f2QqrNBwcuL77yCHD7K9LVp"],"license":"MIT"},"contracts/layer1/shasta/impl/InboxOptimized3.sol":{"keccak256":"0x1ca3aada856a606125f033110c1398aa364bca1000a630ac07c4319f4205a8b1","urls":["bzz-raw://e7f9506a234ad4404d164684a7a176c0f5f9c539359967e71e74a4ddeb207db7","dweb:/ipfs/QmbVpqW1j8MRVH4Vk25MunAVugM9MmXqm5v9wf4g8JtT5h"],"license":"MIT"},"contracts/layer1/shasta/libs/LibBlobs.sol":{"keccak256":"0x1eb5537ac5d821896e88c7711c185b58e86fb9baa4e327136b8ee6d3080feb2a","urls":["bzz-raw://e5913bc556cd0d616896c357e4629e1838001aa6598c11646f52db9b21c8e598","dweb:/ipfs/QmRHYMcshH9Gh2E74RRo6qhFwh1FaY8WAh3vJU13NuFbS4"],"license":"MIT"},"contracts/layer1/shasta/libs/LibForcedInclusion.sol":{"keccak256":"0x3aeadaf8dcb72818947f88c730600eaeb404b630e1ffaabf5694d67591fa21c7","urls":["bzz-raw://e8946be4533070a97ddeb205e972c258576b89a13676fd8297c3a11fadb130a8","dweb:/ipfs/QmZwoPrL2wMhojt8hHozPe7peXbqWQvJapJqSbZaNDqP82"],"license":"MIT"},"contracts/layer1/shasta/libs/LibPackUnpack.sol":{"keccak256":"0x6665378e8b958037247839bf2d7fbb76a20df691364e6365de4c7b21024cfc47","urls":["bzz-raw://ac26d680016f2af8b3aba6b114bfd33dea027c91d5e80258e862f13f115cb1b9","dweb:/ipfs/QmZbiu4rFRBgm3D4Q2CrT19ZWHjbDWQzbe178CJWSsGA2j"],"license":"MIT"},"contracts/layer1/shasta/libs/LibProposeInputDecoder.sol":{"keccak256":"0x6c352b161b60036864279f38364421c9a64bb76865656ac3079c70d1a762407c","urls":["bzz-raw://a35b4be3ffbc29c99d58f7e5337ccb797d5f19b09c3f240d1c962c56d10fb592","dweb:/ipfs/QmXqukwuNVm1x98JHZuf1q7Nrw6ZQ1TdGgmVuFXGAYgr6W"],"license":"MIT"},"contracts/layer1/shasta/libs/LibProposedEventEncoder.sol":{"keccak256":"0x750e56b1357517fdc90755d4812b1dc5234d101a792b6f66e63ebde97eb615d8","urls":["bzz-raw://370fa37a90e7d2b89d89ce9d425eef21c5dabd89c89d6c79bd43ee3f86416401","dweb:/ipfs/QmWagr3b3eBiryWQvvxvk8DZWkU2U4x41T7ng2vhpwUU2U"],"license":"MIT"},"contracts/layer1/shasta/libs/LibProveInputDecoder.sol":{"keccak256":"0xed2bf2476a111a64402ab21c020f18b5d80af1eb10d40528a28e0997ce9f3bc5","urls":["bzz-raw://93843370e76526f9240846d149f4c3f844dd33d30f67ba2387adb095e21094c1","dweb:/ipfs/QmQ8WoZ1M72FERYajYYF14qXRPaSDS5nLnoztKLmSGvMNz"],"license":"MIT"},"contracts/layer1/shasta/libs/LibProvedEventEncoder.sol":{"keccak256":"0x3986b08eee90389aadc26050776b77f280e7a3ac39999a9170130fe2a8c34a9e","urls":["bzz-raw://959fe232e440c92e7dafffa6a0cbbbdd24be8a192b44e150894e5e735c744127","dweb:/ipfs/QmV1mipk99ups4R6L9ymiHqB5veP2qM5fNAiGjZxMoXiy5"],"license":"MIT"},"contracts/shared/based/iface/ICheckpointManager.sol":{"keccak256":"0xc7fbbff21ed501aae74b3d22d073bc8b746d1c76f4e9744af6035db355a84126","urls":["bzz-raw://fab7e3e59ab5d8f84f9b9131a2e35fcdcd02b434f585f274a57487aa441d1ba4","dweb:/ipfs/QmbbeEA7Xhv5KFzrmCxFBU5DyfHg6eWKzXybrN5uX9dEYv"],"license":"MIT"},"contracts/shared/based/libs/LibBonds.sol":{"keccak256":"0x63c3f2e66a226aad554c0315c090e4b89eecf5086f8661dcc67ddf21548290f1","urls":["bzz-raw://a2c9dd47a1f226699d678ecca7a01771548d6889351a5ba35df0ef8a847e8f18","dweb:/ipfs/QmQGf4Qvtz5DZEPPCMMeTEh3RnWgwQvCP5HPjnRkAGmW6o"],"license":"MIT"},"contracts/shared/common/EssentialContract.sol":{"keccak256":"0x1346a9c363a805f0520b0e9d2a5ca81607da44a4132df2a9d4464d9ff4130aa4","urls":["bzz-raw://a4a5258538af95f4618a056b73162322d66367306585e0e80748e36ea59c9e43","dweb:/ipfs/QmfJHx4qw74Uo39vo7cTHSu8x5TSkUQbM7GmP8QvBin2YQ"],"license":"MIT"},"contracts/shared/common/IResolver.sol":{"keccak256":"0x01273635aa0be2ad8d6218ad520f824f2003eab82be1d14c46da58f2516a48dd","urls":["bzz-raw://122dd3456077cf0be42bb974954c9918dca296415b076faeba0336ecee33de8e","dweb:/ipfs/QmSr4WQEFDJwqyqpextmY8Fp3b7Z96SBHgAEKsvXe6dEZV"],"license":"MIT"},"contracts/shared/libs/LibAddress.sol":{"keccak256":"0x7af4709f0f0c92c0cd8e9e271a18502f2a1701766561e1a53c44ba6326a77ee8","urls":["bzz-raw://ebed170007e55e76f36dcfe76afa7d33191910f21a89de096016adac8cc520e3","dweb:/ipfs/QmUDr1vtqMXZsZS1Bm4esXbHH2sEr1J4KETeKwE37D7R3y"],"license":"MIT"},"contracts/shared/libs/LibMath.sol":{"keccak256":"0x3e2ce1ccb5a4d94c6f97e09ebdb1e731c0bae466981be52147f15063b3742d69","urls":["bzz-raw://3530b4db00c1f357562d2dbab8978613c09b30ce1a6312de864399c7af82f9c7","dweb:/ipfs/Qmbp9HeWwPAx5Krcjuu8UCJB3so6rZu4TUTPD6vRKDDBjg"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"keccak256":"0x9140dabc466abab21b48b72dbda26736b1183a310d0e677d3719d201df026510","urls":["bzz-raw://75267b14b60dc216d01d596a4008189a6c44d3314e53eded0edb1e757d95be16","dweb:/ipfs/QmQoMaxTRT6V7uQj9USfdQH9jh1crywB9auVjThzUSAbG2"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"keccak256":"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e","urls":["bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c","dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef","urls":["bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95","dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx"],"license":"MIT"},"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90","urls":["bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263","dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"],"license":"MIT"},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff","urls":["bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688","dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"],"license":"MIT"},"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"keccak256":"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2","urls":["bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2","dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"],"license":"MIT"},"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"node_modules/@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf","urls":["bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1","dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69","urls":["bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71","dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1","urls":["bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68","dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa","urls":["bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931","dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899","urls":["bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da","dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":37741,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":37744,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":43217,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":37120,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":37240,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":37013,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_pendingOwner","offset":0,"slot":"101","type":"t_address"},{"astId":37107,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":29854,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gapFromOldAddressResolver","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":29857,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__reentry","offset":0,"slot":"201","type":"t_uint8"},{"astId":29859,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__paused","offset":1,"slot":"201","type":"t_uint8"},{"astId":29863,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"202","type":"t_array(t_uint256)49_storage"},{"astId":18507,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__slotsUsedByPacaya","offset":0,"slot":"251","type":"t_array(t_uint256)6_storage"},{"astId":18512,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"bondBalance","offset":0,"slot":"257","type":"t_mapping(t_address,t_uint256)"},{"astId":18517,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_proposalHashes","offset":0,"slot":"258","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":18522,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_transitionRecordHashes","offset":0,"slot":"259","type":"t_mapping(t_bytes32,t_bytes32)"},{"astId":18526,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_forcedInclusionStorage","offset":0,"slot":"260","type":"t_struct(Storage)21277_storage"},{"astId":18530,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"262","type":"t_array(t_uint256)39_storage"},{"astId":20336,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"_reusableTransitionRecords","offset":0,"slot":"301","type":"t_mapping(t_uint256,t_struct(ReusableTransitionRecord)20330_storage)"},{"astId":20340,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"302","type":"t_array(t_uint256)49_storage"},{"astId":20851,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"351","type":"t_array(t_uint256)50_storage"},{"astId":20941,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"__gap","offset":0,"slot":"401","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32","base":"t_bytes32"},"t_array(t_uint256)39_storage":{"encoding":"inplace","label":"uint256[39]","numberOfBytes":"1248","base":"t_uint256"},"t_array(t_uint256)49_storage":{"encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568","base":"t_uint256"},"t_array(t_uint256)50_storage":{"encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600","base":"t_uint256"},"t_array(t_uint256)6_storage":{"encoding":"inplace","label":"uint256[6]","numberOfBytes":"192","base":"t_uint256"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes26":{"encoding":"inplace","label":"bytes26","numberOfBytes":"26"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint256,t_struct(ForcedInclusion)18165_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct IForcedInclusionStore.ForcedInclusion)","numberOfBytes":"32","value":"t_struct(ForcedInclusion)18165_storage"},"t_mapping(t_uint256,t_struct(ReusableTransitionRecord)20330_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct InboxOptimized1.ReusableTransitionRecord)","numberOfBytes":"32","value":"t_struct(ReusableTransitionRecord)20330_storage"},"t_struct(BlobSlice)21161_storage":{"encoding":"inplace","label":"struct LibBlobs.BlobSlice","numberOfBytes":"64","members":[{"astId":21154,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"blobHashes","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":21157,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"offset","offset":0,"slot":"1","type":"t_uint24"},{"astId":21160,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"timestamp","offset":3,"slot":"1","type":"t_uint48"}]},"t_struct(ForcedInclusion)18165_storage":{"encoding":"inplace","label":"struct IForcedInclusionStore.ForcedInclusion","numberOfBytes":"96","members":[{"astId":18160,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"feeInGwei","offset":0,"slot":"0","type":"t_uint64"},{"astId":18164,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"blobSlice","offset":0,"slot":"1","type":"t_struct(BlobSlice)21161_storage"}]},"t_struct(ReusableTransitionRecord)20330_storage":{"encoding":"inplace","label":"struct InboxOptimized1.ReusableTransitionRecord","numberOfBytes":"64","members":[{"astId":20325,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"transitionRecordHash","offset":0,"slot":"0","type":"t_bytes32"},{"astId":20327,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"proposalId","offset":0,"slot":"1","type":"t_uint48"},{"astId":20329,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"partialParentTransitionHash","offset":6,"slot":"1","type":"t_bytes26"}]},"t_struct(Storage)21277_storage":{"encoding":"inplace","label":"struct LibForcedInclusion.Storage","numberOfBytes":"64","members":[{"astId":21267,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"queue","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(ForcedInclusion)18165_storage)"},{"astId":21270,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"head","offset":0,"slot":"1","type":"t_uint48"},{"astId":21273,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"tail","offset":6,"slot":"1","type":"t_uint48"},{"astId":21276,"contract":"contracts/layer1/shasta/impl/InboxOptimized3.sol:InboxOptimized3","label":"lastProcessedAt","offset":12,"slot":"1","type":"t_uint48"}]},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint48":{"encoding":"inplace","label":"uint48","numberOfBytes":"6"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"ast":{"absolutePath":"contracts/layer1/shasta/impl/InboxOptimized3.sol","id":21043,"exportedSymbols":{"Inbox":[20259],"InboxOptimized2":[20920],"InboxOptimized3":[21042],"LibProposeInputDecoder":[22968],"LibProposedEventEncoder":[23489],"LibProveInputDecoder":[24091],"LibProvedEventEncoder":[24654]},"nodeType":"SourceUnit","src":"32:4398:68","nodes":[{"id":20922,"nodeType":"PragmaDirective","src":"32:24:68","nodes":[],"literals":["solidity","^","0.8",".24"]},{"id":20924,"nodeType":"ImportDirective","src":"58:36:68","nodes":[],"absolutePath":"contracts/layer1/shasta/impl/Inbox.sol","file":"./Inbox.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":20314,"symbolAliases":[{"foreign":{"id":20923,"name":"Inbox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20259,"src":"67:5:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":20926,"nodeType":"ImportDirective","src":"95:56:68","nodes":[],"absolutePath":"contracts/layer1/shasta/impl/InboxOptimized2.sol","file":"./InboxOptimized2.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":20921,"symbolAliases":[{"foreign":{"id":20925,"name":"InboxOptimized2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20920,"src":"104:15:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":20928,"nodeType":"ImportDirective","src":"152:76:68","nodes":[],"absolutePath":"contracts/layer1/shasta/libs/LibProposeInputDecoder.sol","file":"../libs/LibProposeInputDecoder.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":22969,"symbolAliases":[{"foreign":{"id":20927,"name":"LibProposeInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22968,"src":"161:22:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":20930,"nodeType":"ImportDirective","src":"229:72:68","nodes":[],"absolutePath":"contracts/layer1/shasta/libs/LibProveInputDecoder.sol","file":"../libs/LibProveInputDecoder.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":24092,"symbolAliases":[{"foreign":{"id":20929,"name":"LibProveInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24091,"src":"238:20:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":20932,"nodeType":"ImportDirective","src":"302:78:68","nodes":[],"absolutePath":"contracts/layer1/shasta/libs/LibProposedEventEncoder.sol","file":"../libs/LibProposedEventEncoder.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":23490,"symbolAliases":[{"foreign":{"id":20931,"name":"LibProposedEventEncoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23489,"src":"311:23:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":20934,"nodeType":"ImportDirective","src":"381:74:68","nodes":[],"absolutePath":"contracts/layer1/shasta/libs/LibProvedEventEncoder.sol","file":"../libs/LibProvedEventEncoder.sol","nameLocation":"-1:-1:-1","scope":21043,"sourceUnit":24655,"symbolAliases":[{"foreign":{"id":20933,"name":"LibProvedEventEncoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24654,"src":"390:21:68","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":21042,"nodeType":"ContractDefinition","src":"1025:3404:68","nodes":[{"id":20941,"nodeType":"VariableDeclaration","src":"1250:25:68","nodes":[],"constant":false,"mutability":"mutable","name":"__gap","nameLocation":"1270:5:68","scope":21042,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":20938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:68","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20940,"length":{"hexValue":"3530","id":20939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1258:2:68","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1250:11:68","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"id":20947,"nodeType":"FunctionDefinition","src":"1444:35:68","nodes":[],"body":{"id":20946,"nodeType":"Block","src":"1476:3:68","nodes":[],"statements":[]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":20944,"kind":"baseConstructorSpecifier","modifierName":{"id":20943,"name":"InboxOptimized2","nameLocations":["1458:15:68"],"nodeType":"IdentifierPath","referencedDeclaration":20920,"src":"1458:15:68"},"nodeType":"ModifierInvocation","src":"1458:17:68"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":20942,"nodeType":"ParameterList","parameters":[],"src":"1455:2:68"},"returnParameters":{"id":20945,"nodeType":"ParameterList","parameters":[],"src":"1476:0:68"},"scope":21042,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":20963,"nodeType":"FunctionDefinition","src":"1854:199:68","nodes":[],"body":{"id":20962,"nodeType":"Block","src":"1992:61:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":20959,"name":"_input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20951,"src":"2039:6:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_memory_ptr","typeString":"struct IInbox.ProposeInput memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ProposeInput_$18337_memory_ptr","typeString":"struct IInbox.ProposeInput memory"}],"expression":{"id":20957,"name":"LibProposeInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22968,"src":"2009:22:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProposeInputDecoder_$22968_$","typeString":"type(library LibProposeInputDecoder)"}},"id":20958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2032:6:68","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":22168,"src":"2009:29:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ProposeInput_$18337_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct IInbox.ProposeInput memory) pure returns (bytes memory)"}},"id":20960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:37:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":20956,"id":20961,"nodeType":"Return","src":"2002:44:68"}]},"baseFunctions":[19008],"documentation":{"id":20948,"nodeType":"StructuredDocumentation","src":"1654:195:68","text":"@notice Encodes ProposeInput using optimized binary format\n @dev Reduces calldata size by ~35% compared to standard ABI encoding\n @param _input The ProposeInput struct to encode"},"functionSelector":"13fc9a59","implemented":true,"kind":"function","modifiers":[],"name":"encodeProposeInput","nameLocation":"1863:18:68","overrides":{"id":20953,"nodeType":"OverrideSpecifier","overrides":[],"src":"1948:8:68"},"parameters":{"id":20952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20951,"mutability":"mutable","name":"_input","nameLocation":"1902:6:68","nodeType":"VariableDeclaration","scope":20963,"src":"1882:26:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_memory_ptr","typeString":"struct IInbox.ProposeInput"},"typeName":{"id":20950,"nodeType":"UserDefinedTypeName","pathNode":{"id":20949,"name":"ProposeInput","nameLocations":["1882:12:68"],"nodeType":"IdentifierPath","referencedDeclaration":18337,"src":"1882:12:68"},"referencedDeclaration":18337,"src":"1882:12:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_storage_ptr","typeString":"struct IInbox.ProposeInput"}},"visibility":"internal"}],"src":"1881:28:68"},"returnParameters":{"id":20956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20963,"src":"1974:12:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20954,"name":"bytes","nodeType":"ElementaryTypeName","src":"1974:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1973:14:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":20979,"nodeType":"FunctionDefinition","src":"2255:193:68","nodes":[],"body":{"id":20978,"nodeType":"Block","src":"2389:59:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":20975,"name":"_input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20967,"src":"2434:6:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_memory_ptr","typeString":"struct IInbox.ProveInput memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ProveInput_$18349_memory_ptr","typeString":"struct IInbox.ProveInput memory"}],"expression":{"id":20973,"name":"LibProveInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24091,"src":"2406:20:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProveInputDecoder_$24091_$","typeString":"type(library LibProveInputDecoder)"}},"id":20974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2427:6:68","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":23617,"src":"2406:27:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ProveInput_$18349_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct IInbox.ProveInput memory) pure returns (bytes memory)"}},"id":20976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2406:35:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":20972,"id":20977,"nodeType":"Return","src":"2399:42:68"}]},"baseFunctions":[19023],"documentation":{"id":20964,"nodeType":"StructuredDocumentation","src":"2059:191:68","text":"@notice Encodes ProveInput using optimized binary format\n @dev Reduces calldata size by ~40% compared to standard ABI encoding\n @param _input The ProveInput struct to encode"},"functionSelector":"d1e0b652","implemented":true,"kind":"function","modifiers":[],"name":"encodeProveInput","nameLocation":"2264:16:68","overrides":{"id":20969,"nodeType":"OverrideSpecifier","overrides":[],"src":"2345:8:68"},"parameters":{"id":20968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20967,"mutability":"mutable","name":"_input","nameLocation":"2299:6:68","nodeType":"VariableDeclaration","scope":20979,"src":"2281:24:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_memory_ptr","typeString":"struct IInbox.ProveInput"},"typeName":{"id":20966,"nodeType":"UserDefinedTypeName","pathNode":{"id":20965,"name":"ProveInput","nameLocations":["2281:10:68"],"nodeType":"IdentifierPath","referencedDeclaration":18349,"src":"2281:10:68"},"referencedDeclaration":18349,"src":"2281:10:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_storage_ptr","typeString":"struct IInbox.ProveInput"}},"visibility":"internal"}],"src":"2280:26:68"},"returnParameters":{"id":20972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20979,"src":"2371:12:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20970,"name":"bytes","nodeType":"ElementaryTypeName","src":"2371:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2370:14:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":20994,"nodeType":"FunctionDefinition","src":"2656:203:68","nodes":[],"body":{"id":20993,"nodeType":"Block","src":"2795:64:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":20990,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20983,"src":"2843:8:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProposedEventPayload_$18363_memory_ptr","typeString":"struct IInbox.ProposedEventPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ProposedEventPayload_$18363_memory_ptr","typeString":"struct IInbox.ProposedEventPayload memory"}],"expression":{"id":20988,"name":"LibProposedEventEncoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23489,"src":"2812:23:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProposedEventEncoder_$23489_$","typeString":"type(library LibProposedEventEncoder)"}},"id":20989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:6:68","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":23203,"src":"2812:30:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ProposedEventPayload_$18363_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct IInbox.ProposedEventPayload memory) pure returns (bytes memory)"}},"id":20991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:40:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":20987,"id":20992,"nodeType":"Return","src":"2805:47:68"}]},"documentation":{"id":20980,"nodeType":"StructuredDocumentation","src":"2454:197:68","text":"@notice Encodes ProposedEventPayload for efficient event emission\n @dev Uses LibProposedEventEncoder for compact representation\n @param _payload The ProposedEventPayload to encode"},"functionSelector":"76534f87","implemented":true,"kind":"function","modifiers":[],"name":"encodeProposedEventPayload","nameLocation":"2665:26:68","parameters":{"id":20984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20983,"mutability":"mutable","name":"_payload","nameLocation":"2720:8:68","nodeType":"VariableDeclaration","scope":20994,"src":"2692:36:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposedEventPayload_$18363_memory_ptr","typeString":"struct IInbox.ProposedEventPayload"},"typeName":{"id":20982,"nodeType":"UserDefinedTypeName","pathNode":{"id":20981,"name":"ProposedEventPayload","nameLocations":["2692:20:68"],"nodeType":"IdentifierPath","referencedDeclaration":18363,"src":"2692:20:68"},"referencedDeclaration":18363,"src":"2692:20:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProposedEventPayload_$18363_storage_ptr","typeString":"struct IInbox.ProposedEventPayload"}},"visibility":"internal"}],"src":"2691:38:68"},"returnParameters":{"id":20987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20994,"src":"2777:12:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":20985,"name":"bytes","nodeType":"ElementaryTypeName","src":"2777:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2776:14:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":21009,"nodeType":"FunctionDefinition","src":"3061:197:68","nodes":[],"body":{"id":21008,"nodeType":"Block","src":"3196:62:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":21005,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20998,"src":"3242:8:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProvedEventPayload_$18376_memory_ptr","typeString":"struct IInbox.ProvedEventPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ProvedEventPayload_$18376_memory_ptr","typeString":"struct IInbox.ProvedEventPayload memory"}],"expression":{"id":21003,"name":"LibProvedEventEncoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24654,"src":"3213:21:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProvedEventEncoder_$24654_$","typeString":"type(library LibProvedEventEncoder)"}},"id":21004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3235:6:68","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":24343,"src":"3213:28:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ProvedEventPayload_$18376_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct IInbox.ProvedEventPayload memory) pure returns (bytes memory)"}},"id":21006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:38:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":21002,"id":21007,"nodeType":"Return","src":"3206:45:68"}]},"documentation":{"id":20995,"nodeType":"StructuredDocumentation","src":"2865:191:68","text":"@notice Encodes ProvedEventPayload for efficient event emission\n @dev Uses LibProvedEventEncoder for compact representation\n @param _payload The ProvedEventPayload to encode"},"functionSelector":"8481d396","implemented":true,"kind":"function","modifiers":[],"name":"encodeProvedEventPayload","nameLocation":"3070:24:68","parameters":{"id":20999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20998,"mutability":"mutable","name":"_payload","nameLocation":"3121:8:68","nodeType":"VariableDeclaration","scope":21009,"src":"3095:34:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProvedEventPayload_$18376_memory_ptr","typeString":"struct IInbox.ProvedEventPayload"},"typeName":{"id":20997,"nodeType":"UserDefinedTypeName","pathNode":{"id":20996,"name":"ProvedEventPayload","nameLocations":["3095:18:68"],"nodeType":"IdentifierPath","referencedDeclaration":18376,"src":"3095:18:68"},"referencedDeclaration":18376,"src":"3095:18:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProvedEventPayload_$18376_storage_ptr","typeString":"struct IInbox.ProvedEventPayload"}},"visibility":"internal"}],"src":"3094:36:68"},"returnParameters":{"id":21002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21009,"src":"3178:12:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":21000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3178:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3177:14:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":21025,"nodeType":"FunctionDefinition","src":"3739:197:68","nodes":[],"body":{"id":21024,"nodeType":"Block","src":"3876:60:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":21021,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21012,"src":"3923:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":21019,"name":"LibProposeInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22968,"src":"3893:22:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProposeInputDecoder_$22968_$","typeString":"type(library LibProposeInputDecoder)"}},"id":21020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3916:6:68","memberName":"decode","nodeType":"MemberAccess","referencedDeclaration":22446,"src":"3893:29:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ProposeInput_$18337_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct IInbox.ProposeInput memory)"}},"id":21022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3893:36:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_memory_ptr","typeString":"struct IInbox.ProposeInput memory"}},"functionReturnParameters":21018,"id":21023,"nodeType":"Return","src":"3886:43:68"}]},"baseFunctions":[18946],"documentation":{"id":21010,"nodeType":"StructuredDocumentation","src":"3443:291:68","text":"@inheritdoc Inbox\n @notice Decodes custom-encoded proposal input data\n @dev Overrides base implementation to use LibProposeInputDecoder\n @param _data The custom-encoded propose input data\n @return _ The decoded ProposeInput struct with all proposal parameters"},"functionSelector":"afb63ad4","implemented":true,"kind":"function","modifiers":[],"name":"decodeProposeInput","nameLocation":"3748:18:68","overrides":{"id":21014,"nodeType":"OverrideSpecifier","overrides":[],"src":"3825:8:68"},"parameters":{"id":21013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21012,"mutability":"mutable","name":"_data","nameLocation":"3782:5:68","nodeType":"VariableDeclaration","scope":21025,"src":"3767:20:68","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":21011,"name":"bytes","nodeType":"ElementaryTypeName","src":"3767:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3766:22:68"},"returnParameters":{"id":21018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21025,"src":"3851:19:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_memory_ptr","typeString":"struct IInbox.ProposeInput"},"typeName":{"id":21016,"nodeType":"UserDefinedTypeName","pathNode":{"id":21015,"name":"ProposeInput","nameLocations":["3851:12:68"],"nodeType":"IdentifierPath","referencedDeclaration":18337,"src":"3851:12:68"},"referencedDeclaration":18337,"src":"3851:12:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProposeInput_$18337_storage_ptr","typeString":"struct IInbox.ProposeInput"}},"visibility":"internal"}],"src":"3850:21:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"public"},{"id":21041,"nodeType":"FunctionDefinition","src":"4236:191:68","nodes":[],"body":{"id":21040,"nodeType":"Block","src":"4369:58:68","nodes":[],"statements":[{"expression":{"arguments":[{"id":21037,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21028,"src":"4414:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":21035,"name":"LibProveInputDecoder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24091,"src":"4386:20:68","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibProveInputDecoder_$24091_$","typeString":"type(library LibProveInputDecoder)"}},"id":21036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4407:6:68","memberName":"decode","nodeType":"MemberAccess","referencedDeclaration":23734,"src":"4386:27:68","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_ProveInput_$18349_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct IInbox.ProveInput memory)"}},"id":21038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:34:68","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_memory_ptr","typeString":"struct IInbox.ProveInput memory"}},"functionReturnParameters":21034,"id":21039,"nodeType":"Return","src":"4379:41:68"}]},"baseFunctions":[18963],"documentation":{"id":21026,"nodeType":"StructuredDocumentation","src":"3942:289:68","text":"@inheritdoc Inbox\n @notice Decodes custom-encoded prove input data\n @dev Overrides base implementation to use LibProveInputDecoder\n @param _data The custom-encoded prove input data\n @return The decoded ProveInput struct with proposals and transitions arrays"},"functionSelector":"edbacd44","implemented":true,"kind":"function","modifiers":[],"name":"decodeProveInput","nameLocation":"4245:16:68","overrides":{"id":21030,"nodeType":"OverrideSpecifier","overrides":[],"src":"4320:8:68"},"parameters":{"id":21029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21028,"mutability":"mutable","name":"_data","nameLocation":"4277:5:68","nodeType":"VariableDeclaration","scope":21041,"src":"4262:20:68","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":21027,"name":"bytes","nodeType":"ElementaryTypeName","src":"4262:5:68","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4261:22:68"},"returnParameters":{"id":21034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21041,"src":"4346:17:68","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_memory_ptr","typeString":"struct IInbox.ProveInput"},"typeName":{"id":21032,"nodeType":"UserDefinedTypeName","pathNode":{"id":21031,"name":"ProveInput","nameLocations":["4346:10:68"],"nodeType":"IdentifierPath","referencedDeclaration":18349,"src":"4346:10:68"},"referencedDeclaration":18349,"src":"4346:10:68","typeDescriptions":{"typeIdentifier":"t_struct$_ProveInput_$18349_storage_ptr","typeString":"struct IInbox.ProveInput"}},"visibility":"internal"}],"src":"4345:19:68"},"scope":21042,"stateMutability":"pure","virtual":false,"visibility":"public"}],"abstract":true,"baseContracts":[{"baseName":{"id":20936,"name":"InboxOptimized2","nameLocations":["1062:15:68"],"nodeType":"IdentifierPath","referencedDeclaration":20920,"src":"1062:15:68"},"id":20937,"nodeType":"InheritanceSpecifier","src":"1062:15:68"}],"canonicalName":"InboxOptimized3","contractDependencies":[],"contractKind":"contract","documentation":{"id":20935,"nodeType":"StructuredDocumentation","src":"457:568:68","text":"@title InboxOptimized3\n @notice Third optimization layer focusing on calldata cost reduction\n @dev Key optimizations:\n      - Custom calldata encoding for propose and prove inputs\n      - Compact binary representation using LibProposeInputDecoder and LibProveInputDecoder\n      - Reduced transaction costs through efficient data packing\n      - Maintains all optimizations from InboxOptimized1 and InboxOptimized2\n @dev Gas savings: ~40% reduction in calldata costs for propose/prove operations\n @custom:security-contact security@taiko.xyz"},"fullyImplemented":false,"linearizedBaseContracts":[21042,20920,20834,20259,30246,37108,37241,43218,37903,47978,47477,47077,47136,18185,18434],"name":"InboxOptimized3","nameLocation":"1043:15:68","scope":21043,"usedErrors":[20261,20263,20265,20267,20269,20271,20275,20277,20281,20283,20285,20291,20293,20295,20297,20307,20313,21239,21241,21874,24090,24651,24653,29875,29877,29879,29881,29883,29885,30670],"usedEvents":[18171,18381,18386,18393,18502,29868,29873,37019,37126,37749,47064,47071,47076]}],"license":"MIT"},"id":68}