[profile.default]
script = "script"
gas_price = 10_000_000_000 # 10 Gwei
gas_limit = "18446744073709551615" # u64::MAX
optimizer = true
optimizer_runs = 200
fuzz_runs = 200
fuzz_runs_show_logs = false
ffi = true
memory_limit = 2_073_741_824
solc_version = "0.8.30"
remappings = [
  "openzeppelin/=node_modules/@openzeppelin/",
  "@openzeppelin=node_modules/@openzeppelin",
  "@openzeppelin-upgrades/contracts/=node_modules/@openzeppelin/contracts-upgradeable/",
  "@risc0/contracts/=node_modules/risc0-ethereum/contracts/src/",
  "@solady/=node_modules/solady/",
  "@optimism/=node_modules/optimism/",
  "@sp1-contracts/=node_modules/sp1-contracts/contracts/",
  "forge-std/=node_modules/forge-std/",
  "@p256-verifier/contracts/=node_modules/p256-verifier/src/",
  "@eth-fabric/urc/=node_modules/urc/src/",
  "ds-test/=node_modules/ds-test/",
  "src/=contracts/",
  "test/=test/",
  "script/=script/",
]

# Do not change the block_gas_limit value, TaikoL2.t.sol depends on it.
# For mainnet_mock tokenomics test we need a huge value to run lots of iterations.
# Use 30M for TaikoL2.t.sol related tests, only use this number with mainnet simulation.
block_gas_limit = 80_000_000

fs_permissions = [
  { access = "read", path = "./out" },
  { access = "read-write", path = "./deployments" },
  { access = "read-write", path = "./gas-reports" },
  { access = "read-write", path = "./script/layer1/proposals/" },
  { access = "read", path = "./test" },
  { access = "read", path = "./script/" },
  { access = "read", path = "./genesis" },
]

# 2394: Transient storage warning
# 3860: Contract initcode size is xxx bytes and exceeds 49152 bytes
# 5574: Contract code size is xxx bytes and exceeds 24576 byte
# 5740: Unreachable code
ignored_error_codes = [2394, 3860, 5574, 5740]

[fmt]
bracket_spacing = true
line_length = 100
multiline_func_header = "all"
number_underscore = "thousands"
wrap_comments = true

[profile.layer1]
src = "contracts/layer1"
test = "test/layer1"
script = "script/layer1"
out = "out/layer1"
evm_version = "cancun"

[profile.layer2]
src = "contracts/layer2"
test = "test/layer2"
script = "script/layer2"
out = "out/layer2"
evm_version = "shanghai"

[profile.shared]
src = "contracts/shared"
test = "test/shared"
script = "script/shared"
out = "out/shared"
evm_version = "shanghai"

[profile.genesis]
src = "contracts/layer2"
test = "test/genesis"
script = "script/layer2"
out = "out/genesis"
evm_version = "shanghai"