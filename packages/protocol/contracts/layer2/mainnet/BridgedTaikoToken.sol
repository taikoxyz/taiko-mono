// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "src/shared/governance/TaikoTokenBase.sol";
import "src/shared/vault/IBridgedERC20.sol";

/// @title BridgedTaikoToken
/// @notice The TaikoToken on L2 to support checkpoints and voting. For testnets, we do not need to
/// use this contract.
/// @custom:security-contact security@taiko.xyz
contract BridgedTaikoToken is TaikoTokenBase, IBridgedERC20 {
    address public immutable erc20Vault;

    constructor(address _erc20Vault) {
        erc20Vault = _erc20Vault;
    }

    /// @notice Initializes the contract.
    /// @param _owner The owner of this contract. msg.sender will be used if this value is zero.
    function init(address _owner) external initializer {
        __Essential_init(_owner);
        __ERC20_init("Taiko Token", "TAIKO");
        __ERC20Votes_init();
        __ERC20Permit_init("Taiko Token");
    }

    function mint(
        address _account,
        uint256 _amount
    )
        external
        override
        whenNotPaused
        onlyFromOwnerOr(erc20Vault)
        nonReentrant
    {
        _mint(_account, _amount);
    }

    function burn(uint256 _amount)
        external
        override
        whenNotPaused
        onlyFromOwnerOr(erc20Vault)
        nonReentrant
    {
        _burn(msg.sender, _amount);
    }

    /// @notice Gets the canonical token's address and chain ID.
    /// @return The canonical token's address.
    /// @return The canonical token's chain ID.
    function canonical() public pure returns (address, uint256) {
        // 0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800 is the TAIKO token on Ethereum mainnet
        return (0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800, 1);
    }

    function changeMigrationStatus(address, bool) public pure notImplemented { }
}

// ===== STORAGE LAYOUT START =====
// This section is auto-generated by script/gen-layouts.sh. Do not edit manually.
//
// 
// ╭-----------------------------------------------------+---------------------------------------------------------------+------+--------+-------+------------------------------------------------------------------╮
// | Name                                                | Type                                                          | Slot | Offset | Bytes |
// +================================================================================================================================================================================================================+
// | _initialized                                        | uint8                                                         | 0    | 0      | 1     |
// |
// | _initializing                                       | bool                                                          | 0    | 1      | 1     |
// |
// | __gap                                               | uint256[50]                                                   | 1    | 0      | 1600  |
// |
// | _owner                                              | address                                                       | 51   | 0      | 20    |
// |
// | __gap                                               | uint256[49]                                                   | 52   | 0      | 1568  |
// |
// | _pendingOwner                                       | address                                                       | 101  | 0      | 20    |
// |
// | __gap                                               | uint256[49]                                                   | 102  | 0      | 1568  |
// |
// | __gapFromOldAddressResolver                         | uint256[50]                                                   | 151  | 0      | 1600  |
// |
// | __reentry                                           | uint8                                                         | 201  | 0      | 1     |
// |
// | __paused                                            | uint8                                                         | 201  | 1      | 1     |
// |
// | __gap                                               | uint256[49]                                                   | 202  | 0      | 1568  |
// |
// | __slots_previously_used_by_ERC20SnapshotUpgradeable | uint256[50]                                                   | 251  | 0      | 1600  |
// |
// | _balances                                           | mapping(address => uint256)                                   | 301  | 0      | 32    |
// |
// | _allowances                                         | mapping(address => mapping(address => uint256))               | 302  | 0      | 32    |
// |
// | _totalSupply                                        | uint256                                                       | 303  | 0      | 32    |
// |
// | _name                                               | string                                                        | 304  | 0      | 32    |
// |
// | _symbol                                             | string                                                        | 305  | 0      | 32    |
// |
// | __gap                                               | uint256[45]                                                   | 306  | 0      | 1440  |
// |
// | _hashedName                                         | bytes32                                                       | 351  | 0      | 32    |
// |
// | _hashedVersion                                      | bytes32                                                       | 352  | 0      | 32    |
// |
// | _name                                               | string                                                        | 353  | 0      | 32    |
// |
// | _version                                            | string                                                        | 354  | 0      | 32    |
// |
// | __gap                                               | uint256[48]                                                   | 355  | 0      | 1536  |
// |
// | _nonces                                             | mapping(address => struct CountersUpgradeable.Counter)        | 403  | 0      | 32    |
// |
// | _PERMIT_TYPEHASH_DEPRECATED_SLOT                    | bytes32                                                       | 404  | 0      | 32    |
// |
// | __gap                                               | uint256[49]                                                   | 405  | 0      | 1568  |
// |
// | _delegates                                          | mapping(address => address)                                   | 454  | 0      | 32    |
// |
// | _checkpoints                                        | mapping(address => struct ERC20VotesUpgradeable.Checkpoint[]) | 455  | 0      | 32    |
// |
// | _totalSupplyCheckpoints                             | struct ERC20VotesUpgradeable.Checkpoint[]                     | 456  | 0      | 32    |
// |
// | __gap                                               | uint256[47]                                                   | 457  | 0      | 1504  |
// |
// | __gap                                               | uint256[50]                                                   | 504  | 0      | 1600  |
// ╰-----------------------------------------------------+---------------------------------------------------------------+------+--------+-------+------------------------------------------------------------------╯
// 
//
// ===== STORAGE LAYOUT END =====
