// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "./LibFasterReentryLock.sol";
import "src/shared/governance/Controller.sol";

/// @title MainnetDAOController
/// @notice This contract maintains ownership of all contracts and assets, and is itself owned by
/// the TaikoDAO. This architecture allows the TaikoDAO to seamlessly transition from one DAO to
/// another by simply changing the owner of this contract. In essence, the TaikoDAO does not
/// directly own contracts or any assets.
/// @custom:security-contact security@taiko.xyz
contract MainnetDAOController is Controller {
    bytes32[50] private __gap;

    function init(address _taikoDAO) external initializer {
        __Essential_init(_taikoDAO);
    }

    /// @notice Execute a list of actions.
    /// @param _actions The actions to execute
    /// @return results_ The raw returned data from the action
    function execute(bytes calldata _actions)
        external
        nonReentrant
        onlyOwner
        returns (bytes[] memory results_)
    {
        return _executeActions(_actions);
    }

    // ---------------------------------------------------------------
    // Internal Functions
    // ---------------------------------------------------------------

    function _storeReentryLock(uint8 _reentry) internal override {
        LibFasterReentryLock.storeReentryLock(_reentry);
    }

    function _loadReentryLock() internal view override returns (uint8) {
        return LibFasterReentryLock.loadReentryLock();
    }
}

// ===== STORAGE LAYOUT START =====
// This section is auto-generated by script/gen-layouts.sh. Do not edit manually.
//
// 
// ╭-----------------------------+-------------+------+--------+-------+------------------------------------------------------------------------╮
// | Name                        | Type        | Slot | Offset | Bytes |
// +============================================================================================================================================+
// | _initialized                | uint8       | 0    | 0      | 1     |
// |
// | _initializing               | bool        | 0    | 1      | 1     |
// |
// | __gap                       | uint256[50] | 1    | 0      | 1600  |
// |
// | _owner                      | address     | 51   | 0      | 20    |
// |
// | __gap                       | uint256[49] | 52   | 0      | 1568  |
// |
// | _pendingOwner               | address     | 101  | 0      | 20    |
// |
// | __gap                       | uint256[49] | 102  | 0      | 1568  |
// |
// | __gapFromOldAddressResolver | uint256[50] | 151  | 0      | 1600  |
// |
// | __reentry                   | uint8       | 201  | 0      | 1     |
// |
// | __paused                    | uint8       | 201  | 1      | 1     |
// |
// | __gap                       | uint256[49] | 202  | 0      | 1568  |
// |
// | __reserved0                 | uint256     | 251  | 0      | 32    |
// |
// | lastExecutionId             | uint64      | 252  | 0      | 8     |
// |
// | __reserved1                 | address     | 252  | 8      | 20    |
// |
// | __gap                       | uint256[48] | 253  | 0      | 1536  |
// |
// | __gap                       | bytes32[50] | 301  | 0      | 1600  |
// ╰-----------------------------+-------------+------+--------+-------+------------------------------------------------------------------------╯
// 
//
// ===== STORAGE LAYOUT END =====
