definitions:
  big.Int:
    type: object
  preconfblocks.BuildPreconfBlockRequestBody:
    properties:
      executableData:
        allOf:
        - $ref: '#/definitions/preconfblocks.ExecutableData'
        description: '@param ExecutableData engine.ExecutableData the data necessary
          to execute an EL payload.'
      signature:
        description: '@param signature string Signature of this executable data payload.'
        type: string
    type: object
  preconfblocks.BuildPreconfBlockResponseBody:
    properties:
      blockHeader:
        allOf:
        - $ref: '#/definitions/types.Header'
        description: '@param blockHeader types.Header of the preconf block'
    type: object
  preconfblocks.ExecutableData:
    properties:
      baseFeePerGas:
        type: integer
      blockNumber:
        type: integer
      extraData:
        items:
          type: integer
        type: array
      feeRecipient:
        type: string
      gasLimit:
        type: integer
      parentHash:
        type: string
      timestamp:
        type: integer
      transactions:
        description: Transactions list with RLP encoded at first, then zlib compressed.
        items:
          type: integer
        type: array
    type: object
  preconfblocks.RemovePreconfBlocksRequestBody:
    properties:
      newLastBlockId:
        description: |-
          @param newLastBlockID uint64 New last block ID of the blockchain, it should
          @param not smaller than the canonical chain's highest block ID.
        type: integer
    type: object
  preconfblocks.RemovePreconfBlocksResponseBody:
    properties:
      headsRemoved:
        description: '@param headsRemoved uint64 Number of preconf heads removed'
        type: integer
      lastBlockId:
        description: '@param lastBlockID uint64 Current highest block ID of the blockchain
          (including preconf blocks)'
        type: integer
      lastProposedBlockID:
        description: '@param lastProposedBlockID uint64 Highest block ID of the cnonical
          chain'
        type: integer
    type: object
  types.Header:
    properties:
      baseFeePerGas:
        allOf:
        - $ref: '#/definitions/big.Int'
        description: BaseFee was added by EIP-1559 and is ignored in legacy headers.
      blobGasUsed:
        description: BlobGasUsed was added by EIP-4844 and is ignored in legacy headers.
        type: integer
      difficulty:
        $ref: '#/definitions/big.Int'
      excessBlobGas:
        description: ExcessBlobGas was added by EIP-4844 and is ignored in legacy
          headers.
        type: integer
      extraData:
        items:
          type: integer
        type: array
      gasLimit:
        type: integer
      gasUsed:
        type: integer
      logsBloom:
        items:
          type: integer
        type: array
      miner:
        type: string
      mixHash:
        type: string
      nonce:
        items:
          type: integer
        type: array
      number:
        $ref: '#/definitions/big.Int'
      parentBeaconBlockRoot:
        description: ParentBeaconRoot was added by EIP-4788 and is ignored in legacy
          headers.
        type: string
      parentHash:
        type: string
      receiptsRoot:
        type: string
      requestsHash:
        description: RequestsHash was added by EIP-7685 and is ignored in legacy headers.
        type: string
      sha3Uncles:
        type: string
      stateRoot:
        type: string
      timestamp:
        type: integer
      transactionsRoot:
        type: string
      withdrawalsRoot:
        description: WithdrawalsHash was added by EIP-4895 and is ignored in legacy
          headers.
        type: string
    type: object
info:
  contact:
    email: info@taiko.xyz
    name: API Support
    url: https://community.taiko.xyz/
  license:
    name: MIT
    url: https://github.com/taikoxyz/taiko-mono/blob/main/LICENSE.md
  termsOfService: http://swagger.io/terms/
  title: Taiko Preconfirmation Block Server API
  version: "1.0"
paths:
  /healthz:
    get:
      consumes:
      - application/json
      operationId: health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get current server health status
  /preconfBlocks:
    delete:
      consumes:
      - application/json
      description: |-
        Remove all preconf blocks from the blockchain beyond the specified block height,
        ensuring the latest block ID does not exceed the given height. This method will fail if
        the block with an ID one greater than the specified height is not a preconf block. If the
        specified block height is greater than the latest preconf block ID, the method will succeed
        without modifying the blockchain.
      parameters:
      - description: preconf blocks removing request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/preconfblocks.RemovePreconfBlocksRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/preconfblocks.RemovePreconfBlocksResponseBody'
    post:
      consumes:
      - application/json
      description: |-
        Insert a preconfirmation block to the L2 execution engine, if the preconfirmation block creation
        body in request are valid, it will insert the correspoinding the
        preconfirmation block to the backend L2 execution engine and return a success response.
      parameters:
      - description: preconf block creation request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/preconfblocks.BuildPreconfBlockRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/preconfblocks.BuildPreconfBlockResponseBody'
      summary: Insert a preconfirmation block to the L2 execution engine.
swagger: "2.0"
